@256
D=A
@SP
M=D
@Sys.init_RETURN_0 // call Sys.init 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET0
D=A
@$FRAME$
0;JMP
($RET0)
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
(Sys.init_RETURN_0)
($RETURN$)
@R15
M=D
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
@R15
A=M
0;JMP
($LT$)
@R15
M=D
@SP // lt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JLT_TRUE__0
D;JLT
D=0
@JLT_FALSE__0
0;JMP
(JLT_TRUE__0)
D=-1
(JLT_FALSE__0)
@SP
A=M
M=D
@SP
M=M+1
@R15
A=M
0;JMP
($GT$)
@R15
M=D
@SP // gt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JGT_TRUE__1
D;JGT
D=0
@JGT_FALSE__1
0;JMP
(JGT_TRUE__1)
D=-1
(JGT_FALSE__1)
@SP
A=M
M=D
@SP
M=M+1
@R15
A=M
0;JMP
($EQ$)
@R15
M=D
@SP // eq
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JEQ__2
D;JEQ
D=1
(JEQ__2)
D=D-1
@SP
A=M
M=D
@SP
M=M+1
@R15
A=M
0;JMP
($FRAME$)
@R15
M=D
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@R15
A=M
0;JMP
(Array.new)// initializa local variables
@0
D=A
@R13
M=D
(Array.new_INIT_LOCALS_LOOP)
@Array.new_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Array.new_INIT_LOCALS_LOOP
0;JMP
(Array.new_INIT_LOCALS_END)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Memory.alloc_RETURN_1 // call Memory.alloc 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET1
D=A
@$FRAME$
0;JMP
($RET1)
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.alloc
0;JMP
(Memory.alloc_RETURN_1)
@$RET2
D=A
@$RETURN$
0;JMP
($RET2)
(Array.dispose)// initializa local variables
@0
D=A
@R13
M=D
(Array.dispose_INIT_LOCALS_LOOP)
@Array.dispose_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Array.dispose_INIT_LOCALS_LOOP
0;JMP
(Array.dispose_INIT_LOCALS_END)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop pointer 0
M=M-1
A=M
D=M
@R3
M=D
@R3 // push pointer 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@Memory.deAlloc_RETURN_2 // call Memory.deAlloc 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET3
D=A
@$FRAME$
0;JMP
($RET3)
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.deAlloc
0;JMP
(Memory.deAlloc_RETURN_2)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET4
D=A
@$RETURN$
0;JMP
($RET4)
(Keyboard.init)// initializa local variables
@0
D=A
@R13
M=D
(Keyboard.init_INIT_LOCALS_LOOP)
@Keyboard.init_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Keyboard.init_INIT_LOCALS_LOOP
0;JMP
(Keyboard.init_INIT_LOCALS_END)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET5
D=A
@$RETURN$
0;JMP
($RET5)
(Keyboard.keyPressed)// initializa local variables
@0
D=A
@R13
M=D
(Keyboard.keyPressed_INIT_LOCALS_LOOP)
@Keyboard.keyPressed_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Keyboard.keyPressed_INIT_LOCALS_LOOP
0;JMP
(Keyboard.keyPressed_INIT_LOCALS_END)
@24576 // push constant 24576
D=A
@SP
A=M
M=D
@SP
M=M+1
@Memory.peek_RETURN_3 // call Memory.peek 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET6
D=A
@$FRAME$
0;JMP
($RET6)
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.peek
0;JMP
(Memory.peek_RETURN_3)
@$RET7
D=A
@$RETURN$
0;JMP
($RET7)
(Keyboard.readChar)// initializa local variables
@1
D=A
@R13
M=D
(Keyboard.readChar_INIT_LOCALS_LOOP)
@Keyboard.readChar_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Keyboard.readChar_INIT_LOCALS_LOOP
0;JMP
(Keyboard.readChar_INIT_LOCALS_END)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.printChar_RETURN_4 // call Output.printChar 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET8
D=A
@$FRAME$
0;JMP
($RET8)
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printChar
0;JMP
(Output.printChar_RETURN_4)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
(Keyboard_WHILE_EXP0)
@Keyboard.keyPressed_RETURN_5 // call Keyboard.keyPressed 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET9
D=A
@$FRAME$
0;JMP
($RET9)
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Keyboard.keyPressed
0;JMP
(Keyboard.keyPressed_RETURN_5)
@SP
A=M
A=A-1
M=!M
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@Keyboard_WHILE_END0
D;JNE
@Keyboard_WHILE_EXP0
0;JMP
(Keyboard_WHILE_END0)
@Keyboard.keyPressed_RETURN_6 // call Keyboard.keyPressed 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET10
D=A
@$FRAME$
0;JMP
($RET10)
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Keyboard.keyPressed
0;JMP
(Keyboard.keyPressed_RETURN_6)
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(Keyboard_WHILE_EXP1)
@Keyboard.keyPressed_RETURN_7 // call Keyboard.keyPressed 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET11
D=A
@$FRAME$
0;JMP
($RET11)
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Keyboard.keyPressed
0;JMP
(Keyboard.keyPressed_RETURN_7)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@$RET12
D=A
@$EQ$
0;JMP
($RET12)
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@Keyboard_WHILE_END1
D;JNE
@Keyboard_WHILE_EXP1
0;JMP
(Keyboard_WHILE_END1)
@Output.backSpace_RETURN_8 // call Output.backSpace 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET13
D=A
@$FRAME$
0;JMP
($RET13)
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.backSpace
0;JMP
(Output.backSpace_RETURN_8)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Output.printChar_RETURN_9 // call Output.printChar 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET14
D=A
@$FRAME$
0;JMP
($RET14)
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printChar
0;JMP
(Output.printChar_RETURN_9)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@$RET15
D=A
@$RETURN$
0;JMP
($RET15)
(Keyboard.readLine)// initializa local variables
@2
D=A
@R13
M=D
(Keyboard.readLine_INIT_LOCALS_LOOP)
@Keyboard.readLine_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Keyboard.readLine_INIT_LOCALS_LOOP
0;JMP
(Keyboard.readLine_INIT_LOCALS_END)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Output.printString_RETURN_10 // call Output.printString 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET16
D=A
@$FRAME$
0;JMP
($RET16)
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printString
0;JMP
(Output.printString_RETURN_10)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@20 // push constant 20
D=A
@SP
A=M
M=D
@SP
M=M+1
@String.new_RETURN_11 // call String.new 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET17
D=A
@$FRAME$
0;JMP
($RET17)
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.new
0;JMP
(String.new_RETURN_11)
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(Keyboard_WHILE_EXP2)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=!M
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@Keyboard_WHILE_END2
D;JNE
@Keyboard.readChar_RETURN_12 // call Keyboard.readChar 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET18
D=A
@$FRAME$
0;JMP
($RET18)
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Keyboard.readChar
0;JMP
(Keyboard.readChar_RETURN_12)
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@String.newLine_RETURN_13 // call String.newLine 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET19
D=A
@$FRAME$
0;JMP
($RET19)
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.newLine
0;JMP
(String.newLine_RETURN_13)
@$RET20
D=A
@$EQ$
0;JMP
($RET20)
@SP
AM=M-1
D=M
M=0
@Keyboard_IF_TRUE0
D;JNE
@Keyboard_IF_FALSE0
0;JMP
(Keyboard_IF_TRUE0)
@Output.println_RETURN_14 // call Output.println 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET21
D=A
@$FRAME$
0;JMP
($RET21)
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.println
0;JMP
(Output.println_RETURN_14)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@$RET22
D=A
@$RETURN$
0;JMP
($RET22)
@Keyboard_IF_END0
0;JMP
(Keyboard_IF_FALSE0)
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@String.backSpace_RETURN_15 // call String.backSpace 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET23
D=A
@$FRAME$
0;JMP
($RET23)
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.backSpace
0;JMP
(String.backSpace_RETURN_15)
@$RET24
D=A
@$EQ$
0;JMP
($RET24)
@SP
AM=M-1
D=M
M=0
@Keyboard_IF_TRUE1
D;JNE
@Keyboard_IF_FALSE1
0;JMP
(Keyboard_IF_TRUE1)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@String.eraseLastChar_RETURN_16 // call String.eraseLastChar 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET25
D=A
@$FRAME$
0;JMP
($RET25)
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.eraseLastChar
0;JMP
(String.eraseLastChar_RETURN_16)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@Keyboard_IF_END1
0;JMP
(Keyboard_IF_FALSE1)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@String.appendChar_RETURN_17 // call String.appendChar 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET26
D=A
@$FRAME$
0;JMP
($RET26)
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(String.appendChar_RETURN_17)
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(Keyboard_IF_END1)
(Keyboard_IF_END0)
@Keyboard_WHILE_EXP2
0;JMP
(Keyboard_WHILE_END2)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@$RET27
D=A
@$RETURN$
0;JMP
($RET27)
(Keyboard.readInt)// initializa local variables
@1
D=A
@R13
M=D
(Keyboard.readInt_INIT_LOCALS_LOOP)
@Keyboard.readInt_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Keyboard.readInt_INIT_LOCALS_LOOP
0;JMP
(Keyboard.readInt_INIT_LOCALS_END)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Keyboard.readLine_RETURN_18 // call Keyboard.readLine 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET28
D=A
@$FRAME$
0;JMP
($RET28)
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Keyboard.readLine
0;JMP
(Keyboard.readLine_RETURN_18)
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@String.intValue_RETURN_19 // call String.intValue 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET29
D=A
@$FRAME$
0;JMP
($RET29)
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.intValue
0;JMP
(String.intValue_RETURN_19)
@$RET30
D=A
@$RETURN$
0;JMP
($RET30)
(Main.main)// initializa local variables
@0
D=A
@R13
M=D
(Main.main_INIT_LOCALS_LOOP)
@Main.main_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Main.main_INIT_LOCALS_LOOP
0;JMP
(Main.main_INIT_LOCALS_END)
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@String.new_RETURN_20 // call String.new 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET31
D=A
@$FRAME$
0;JMP
($RET31)
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.new
0;JMP
(String.new_RETURN_20)
@111 // push constant 111
D=A
@SP
A=M
M=D
@SP
M=M+1
@String.appendChar_RETURN_21 // call String.appendChar 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET32
D=A
@$FRAME$
0;JMP
($RET32)
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(String.appendChar_RETURN_21)
@108 // push constant 108
D=A
@SP
A=M
M=D
@SP
M=M+1
@String.appendChar_RETURN_22 // call String.appendChar 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET33
D=A
@$FRAME$
0;JMP
($RET33)
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(String.appendChar_RETURN_22)
@97 // push constant 97
D=A
@SP
A=M
M=D
@SP
M=M+1
@String.appendChar_RETURN_23 // call String.appendChar 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET34
D=A
@$FRAME$
0;JMP
($RET34)
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(String.appendChar_RETURN_23)
@Output.printString_RETURN_24 // call Output.printString 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET35
D=A
@$FRAME$
0;JMP
($RET35)
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printString
0;JMP
(Output.printString_RETURN_24)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET36
D=A
@$RETURN$
0;JMP
($RET36)
(Math.init)// initializa local variables
@2
D=A
@R13
M=D
(Math.init_INIT_LOCALS_LOOP)
@Math.init_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Math.init_INIT_LOCALS_LOOP
0;JMP
(Math.init_INIT_LOCALS_END)
@16 // push constant 16
D=A
@SP
A=M
M=D
@SP
M=M+1
@Array.new_RETURN_25 // call Array.new 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET37
D=A
@$FRAME$
0;JMP
($RET37)
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.new
0;JMP
(Array.new_RETURN_25)
@SP // pop static 0
M=M-1
A=M
D=M
@Math.0
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(Math_WHILE_EXP0)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@16 // push constant 16
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET38
D=A
@$LT$
0;JMP
($RET38)
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@Math_WHILE_END0
D;JNE
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Math.0 // push static 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2 // push constant 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@Math.multiply_RETURN_26 // call Math.multiply 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET39
D=A
@$FRAME$
0;JMP
($RET39)
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Math.multiply_RETURN_26)
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@Math_WHILE_EXP0
0;JMP
(Math_WHILE_END0)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET40
D=A
@$RETURN$
0;JMP
($RET40)
(Math.abs)// initializa local variables
@0
D=A
@R13
M=D
(Math.abs_INIT_LOCALS_LOOP)
@Math.abs_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Math.abs_INIT_LOCALS_LOOP
0;JMP
(Math.abs_INIT_LOCALS_END)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET41
D=A
@$LT$
0;JMP
($RET41)
@SP
AM=M-1
D=M
M=0
@Math_IF_TRUE0
D;JNE
@Math_IF_FALSE0
0;JMP
(Math_IF_TRUE0)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=-M
@ARG // pop argument 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(Math_IF_FALSE0)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@$RET42
D=A
@$RETURN$
0;JMP
($RET42)
(Math.bit)// initializa local variables
@0
D=A
@R13
M=D
(Math.bit_INIT_LOCALS_LOOP)
@Math.bit_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Math.bit_INIT_LOCALS_LOOP
0;JMP
(Math.bit_INIT_LOCALS_END)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Math.0 // push static 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D&M
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET43
D=A
@$EQ$
0;JMP
($RET43)
@SP
A=M
A=A-1
M=!M
@$RET44
D=A
@$RETURN$
0;JMP
($RET44)
(Math.multiply)// initializa local variables
@2
D=A
@R13
M=D
(Math.multiply_INIT_LOCALS_LOOP)
@Math.multiply_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Math.multiply_INIT_LOCALS_LOOP
0;JMP
(Math.multiply_INIT_LOCALS_END)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET45
D=A
@$LT$
0;JMP
($RET45)
@SP
AM=M-1
D=M
M=0
@Math_IF_TRUE1
D;JNE
@Math_IF_FALSE1
0;JMP
(Math_IF_TRUE1)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=-M
@ARG // pop argument 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=-M
@ARG // pop argument 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(Math_IF_FALSE1)
(Math_WHILE_EXP1)
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@$RET46
D=A
@$LT$
0;JMP
($RET46)
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@Math_WHILE_END1
D;JNE
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@Math_WHILE_EXP1
0;JMP
(Math_WHILE_END1)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@$RET47
D=A
@$RETURN$
0;JMP
($RET47)
(Math.divide)// initializa local variables
@1
D=A
@R13
M=D
(Math.divide_INIT_LOCALS_LOOP)
@Math.divide_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Math.divide_INIT_LOCALS_LOOP
0;JMP
(Math.divide_INIT_LOCALS_END)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET48
D=A
@$LT$
0;JMP
($RET48)
@SP
AM=M-1
D=M
M=0
@Math_IF_TRUE2
D;JNE
@Math_IF_FALSE2
0;JMP
(Math_IF_TRUE2)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=-M
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Math.divide_RETURN_27 // call Math.divide 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET49
D=A
@$FRAME$
0;JMP
($RET49)
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(Math.divide_RETURN_27)
@SP
A=M
A=A-1
M=-M
@$RET50
D=A
@$RETURN$
0;JMP
($RET50)
(Math_IF_FALSE2)
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET51
D=A
@$LT$
0;JMP
($RET51)
@SP
AM=M-1
D=M
M=0
@Math_IF_TRUE3
D;JNE
@Math_IF_FALSE3
0;JMP
(Math_IF_TRUE3)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=-M
@Math.divide_RETURN_28 // call Math.divide 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET52
D=A
@$FRAME$
0;JMP
($RET52)
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(Math.divide_RETURN_28)
@SP
A=M
A=A-1
M=-M
@$RET53
D=A
@$RETURN$
0;JMP
($RET53)
(Math_IF_FALSE3)
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@$RET54
D=A
@$GT$
0;JMP
($RET54)
@SP
AM=M-1
D=M
M=0
@Math_IF_TRUE4
D;JNE
@Math_IF_FALSE4
0;JMP
(Math_IF_TRUE4)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET55
D=A
@$RETURN$
0;JMP
($RET55)
(Math_IF_FALSE4)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@Math.divide_RETURN_29 // call Math.divide 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET56
D=A
@$FRAME$
0;JMP
($RET56)
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(Math.divide_RETURN_29)
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2 // push constant 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Math.multiply_RETURN_30 // call Math.multiply 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET57
D=A
@$FRAME$
0;JMP
($RET57)
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Math.multiply_RETURN_30)
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Math.multiply_RETURN_31 // call Math.multiply 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET58
D=A
@$FRAME$
0;JMP
($RET58)
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Math.multiply_RETURN_31)
@SP
AM=M-1
D=M
A=A-1
M=M-D
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@$RET59
D=A
@$LT$
0;JMP
($RET59)
@SP
AM=M-1
D=M
M=0
@Math_IF_TRUE5
D;JNE
@Math_IF_FALSE5
0;JMP
(Math_IF_TRUE5)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@$RET60
D=A
@$RETURN$
0;JMP
($RET60)
@Math_IF_END5
0;JMP
(Math_IF_FALSE5)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@$RET61
D=A
@$RETURN$
0;JMP
($RET61)
(Math_IF_END5)
(Math.sqrt)// initializa local variables
@4
D=A
@R13
M=D
(Math.sqrt_INIT_LOCALS_LOOP)
@Math.sqrt_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Math.sqrt_INIT_LOCALS_LOOP
0;JMP
(Math.sqrt_INIT_LOCALS_END)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@7 // push constant 7
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(Math_WHILE_EXP2)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET62
D=A
@$LT$
0;JMP
($RET62)
@SP
A=M
A=A-1
M=!M
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@Math_WHILE_END2
D;JNE
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Math.0 // push static 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 2
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Math.multiply_RETURN_32 // call Math.multiply 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET63
D=A
@$FRAME$
0;JMP
($RET63)
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Math.multiply_RETURN_32)
@LCL // pop local 3
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 3
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@$RET64
D=A
@$GT$
0;JMP
($RET64)
@SP
A=M
A=A-1
M=!M
@LCL // push local 3
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET65
D=A
@$GT$
0;JMP
($RET65)
@SP
AM=M-1
D=M
A=A-1
M=D&M
@SP
AM=M-1
D=M
M=0
@Math_IF_TRUE6
D;JNE
@Math_IF_FALSE6
0;JMP
(Math_IF_TRUE6)
@LCL // push local 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(Math_IF_FALSE6)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@Math_WHILE_EXP2
0;JMP
(Math_WHILE_END2)
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@$RET66
D=A
@$RETURN$
0;JMP
($RET66)
(Math.max)// initializa local variables
@0
D=A
@R13
M=D
(Math.max_INIT_LOCALS_LOOP)
@Math.max_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Math.max_INIT_LOCALS_LOOP
0;JMP
(Math.max_INIT_LOCALS_END)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@$RET67
D=A
@$GT$
0;JMP
($RET67)
@SP
AM=M-1
D=M
M=0
@Math_IF_TRUE7
D;JNE
@Math_IF_FALSE7
0;JMP
(Math_IF_TRUE7)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@$RET68
D=A
@$RETURN$
0;JMP
($RET68)
(Math_IF_FALSE7)
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@$RET69
D=A
@$RETURN$
0;JMP
($RET69)
(Math.min)// initializa local variables
@0
D=A
@R13
M=D
(Math.min_INIT_LOCALS_LOOP)
@Math.min_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Math.min_INIT_LOCALS_LOOP
0;JMP
(Math.min_INIT_LOCALS_END)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@$RET70
D=A
@$LT$
0;JMP
($RET70)
@SP
AM=M-1
D=M
M=0
@Math_IF_TRUE8
D;JNE
@Math_IF_FALSE8
0;JMP
(Math_IF_TRUE8)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@$RET71
D=A
@$RETURN$
0;JMP
($RET71)
(Math_IF_FALSE8)
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@$RET72
D=A
@$RETURN$
0;JMP
($RET72)
(Memory.init)// initializa local variables
@0
D=A
@R13
M=D
(Memory.init_INIT_LOCALS_LOOP)
@Memory.init_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Memory.init_INIT_LOCALS_LOOP
0;JMP
(Memory.init_INIT_LOCALS_END)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // pop static 0
M=M-1
A=M
D=M
@Memory.0
M=D
@2048 // push constant 2048
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // pop static 1
M=M-1
A=M
D=M
@Memory.1
M=D
@16384 // push constant 16384
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // pop static 2
M=M-1
A=M
D=M
@Memory.2
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // pop static 3
M=M-1
A=M
D=M
@Memory.3
M=D
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // pop static 4
M=M-1
A=M
D=M
@Memory.4
M=D
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=-M
@SP // pop static 5
M=M-1
A=M
D=M
@Memory.5
M=D
@Memory.3 // push static 3
D=M
@SP
A=M
M=D
@SP
M=M+1
@Memory.1 // push static 1
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@16384 // push constant 16384
D=A
@SP
A=M
M=D
@SP
M=M+1
@2048 // push constant 2048
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@Memory.4 // push static 4
D=M
@SP
A=M
M=D
@SP
M=M+1
@Memory.1 // push static 1
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET73
D=A
@$RETURN$
0;JMP
($RET73)
(Memory.peek)// initializa local variables
@0
D=A
@R13
M=D
(Memory.peek_INIT_LOCALS_LOOP)
@Memory.peek_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Memory.peek_INIT_LOCALS_LOOP
0;JMP
(Memory.peek_INIT_LOCALS_END)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Memory.0 // push static 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@$RET74
D=A
@$RETURN$
0;JMP
($RET74)
(Memory.poke)// initializa local variables
@0
D=A
@R13
M=D
(Memory.poke_INIT_LOCALS_LOOP)
@Memory.poke_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Memory.poke_INIT_LOCALS_LOOP
0;JMP
(Memory.poke_INIT_LOCALS_END)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Memory.0 // push static 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET75
D=A
@$RETURN$
0;JMP
($RET75)
(Memory.alloc)// initializa local variables
@2
D=A
@R13
M=D
(Memory.alloc_INIT_LOCALS_LOOP)
@Memory.alloc_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Memory.alloc_INIT_LOCALS_LOOP
0;JMP
(Memory.alloc_INIT_LOCALS_END)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Memory.best_fit_RETURN_33 // call Memory.best_fit 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET76
D=A
@$FRAME$
0;JMP
($RET76)
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.best_fit
0;JMP
(Memory.best_fit_RETURN_33)
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Memory.2 // push static 2
D=M
@SP
A=M
M=D
@SP
M=M+1
@$RET77
D=A
@$EQ$
0;JMP
($RET77)
@SP
AM=M-1
D=M
M=0
@Memory_IF_TRUE0
D;JNE
@Memory_IF_FALSE0
0;JMP
(Memory_IF_TRUE0)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@Memory_IF_END0
0;JMP
(Memory_IF_FALSE0)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET78
D=A
@$EQ$
0;JMP
($RET78)
@SP
AM=M-1
D=M
M=0
@Memory_IF_TRUE1
D;JNE
@Memory_IF_FALSE1
0;JMP
(Memory_IF_TRUE1)
@Memory.1 // push static 1
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Memory.do_alloc_RETURN_34 // call Memory.do_alloc 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET79
D=A
@$FRAME$
0;JMP
($RET79)
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.do_alloc
0;JMP
(Memory.do_alloc_RETURN_34)
@SP // pop static 1
M=M-1
A=M
D=M
@Memory.1
M=D
@Memory_IF_END1
0;JMP
(Memory_IF_FALSE1)
@Memory.4 // push static 4
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@Memory.4 // push static 4
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Memory.do_alloc_RETURN_35 // call Memory.do_alloc 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET80
D=A
@$FRAME$
0;JMP
($RET80)
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.do_alloc
0;JMP
(Memory.do_alloc_RETURN_35)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(Memory_IF_END1)
(Memory_IF_END0)
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@$RET81
D=A
@$RETURN$
0;JMP
($RET81)
(Memory.best_fit)// initializa local variables
@5
D=A
@R13
M=D
(Memory.best_fit_INIT_LOCALS_LOOP)
@Memory.best_fit_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Memory.best_fit_INIT_LOCALS_LOOP
0;JMP
(Memory.best_fit_INIT_LOCALS_END)
@Memory.2 // push static 2
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@16384 // push constant 16384
D=A
@SP
A=M
M=D
@SP
M=M+1
@2048 // push constant 2048
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@LCL // pop local 3
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@Memory.1 // push static 1
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 2
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(Memory_WHILE_EXP0)
@LCL // push local 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET82
D=A
@$EQ$
0;JMP
($RET82)
@SP
A=M
A=A-1
M=!M
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@Memory_WHILE_END0
D;JNE
@Memory.3 // push static 3
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@LCL // pop local 4
D=M
@4
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 4
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@$RET83
D=A
@$LT$
0;JMP
($RET83)
@SP
A=M
A=A-1
M=!M
@LCL // push local 4
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 3
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@$RET84
D=A
@$LT$
0;JMP
($RET84)
@SP
AM=M-1
D=M
A=A-1
M=D&M
@SP
AM=M-1
D=M
M=0
@Memory_IF_TRUE2
D;JNE
@Memory_IF_FALSE2
0;JMP
(Memory_IF_TRUE2)
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 4
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 3
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(Memory_IF_FALSE2)
@LCL // push local 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@Memory.4 // push static 4
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 2
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@Memory_WHILE_EXP0
0;JMP
(Memory_WHILE_END0)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@$RET85
D=A
@$RETURN$
0;JMP
($RET85)
(Memory.do_alloc)// initializa local variables
@2
D=A
@R13
M=D
(Memory.do_alloc_INIT_LOCALS_LOOP)
@Memory.do_alloc_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Memory.do_alloc_INIT_LOCALS_LOOP
0;JMP
(Memory.do_alloc_INIT_LOCALS_END)
@Memory.3 // push static 3
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@2 // push constant 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@$RET86
D=A
@$GT$
0;JMP
($RET86)
@SP
AM=M-1
D=M
M=0
@Memory_IF_TRUE3
D;JNE
@Memory_IF_FALSE3
0;JMP
(Memory_IF_TRUE3)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@Memory.4 // push static 4
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@Memory.4 // push static 4
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@Memory.3 // push static 3
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@Memory.3 // push static 3
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@ARG // pop argument 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@Memory.5 // push static 5
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@Memory_IF_END3
0;JMP
(Memory_IF_FALSE3)
@Memory.4 // push static 4
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@Memory.3 // push static 3
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@ARG // pop argument 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@Memory.5 // push static 5
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(Memory_IF_END3)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@$RET87
D=A
@$RETURN$
0;JMP
($RET87)
(Memory.deAlloc)// initializa local variables
@3
D=A
@R13
M=D
(Memory.deAlloc_INIT_LOCALS_LOOP)
@Memory.deAlloc_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Memory.deAlloc_INIT_LOCALS_LOOP
0;JMP
(Memory.deAlloc_INIT_LOCALS_END)
@Memory.5 // push static 5
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@ARG // pop argument 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Memory.find_prev_free_RETURN_36 // call Memory.find_prev_free 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET88
D=A
@$FRAME$
0;JMP
($RET88)
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.find_prev_free
0;JMP
(Memory.find_prev_free_RETURN_36)
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET89
D=A
@$EQ$
0;JMP
($RET89)
@SP
AM=M-1
D=M
M=0
@Memory_IF_TRUE4
D;JNE
@Memory_IF_FALSE4
0;JMP
(Memory_IF_TRUE4)
@Memory.3 // push static 3
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@Memory.4 // push static 4
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@Memory.1 // push static 1
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop static 1
M=M-1
A=M
D=M
@Memory.1
M=D
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@Memory_IF_END4
0;JMP
(Memory_IF_FALSE4)
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Memory.3 // push static 3
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@$RET90
D=A
@$EQ$
0;JMP
($RET90)
@SP
AM=M-1
D=M
M=0
@Memory_IF_TRUE5
D;JNE
@Memory_IF_FALSE5
0;JMP
(Memory_IF_TRUE5)
@Memory.3 // push static 3
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@Memory.3 // push static 3
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@Memory_IF_END5
0;JMP
(Memory_IF_FALSE5)
@Memory.3 // push static 3
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@Memory.4 // push static 4
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@Memory.4 // push static 4
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@Memory.4 // push static 4
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(Memory_IF_END5)
(Memory_IF_END4)
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Memory.3 // push static 3
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@Memory.4 // push static 4
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@$RET91
D=A
@$EQ$
0;JMP
($RET91)
@SP
AM=M-1
D=M
M=0
@Memory_IF_TRUE6
D;JNE
@Memory_IF_FALSE6
0;JMP
(Memory_IF_TRUE6)
@Memory.4 // push static 4
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 2
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@Memory.3 // push static 3
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@Memory.3 // push static 3
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Memory.3 // push static 3
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@Memory.4 // push static 4
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@Memory.4 // push static 4
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(Memory_IF_FALSE6)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET92
D=A
@$RETURN$
0;JMP
($RET92)
(Memory.find_prev_free)// initializa local variables
@1
D=A
@R13
M=D
(Memory.find_prev_free_INIT_LOCALS_LOOP)
@Memory.find_prev_free_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Memory.find_prev_free_INIT_LOCALS_LOOP
0;JMP
(Memory.find_prev_free_INIT_LOCALS_END)
@Memory.1 // push static 1
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@$RET93
D=A
@$GT$
0;JMP
($RET93)
@SP
AM=M-1
D=M
M=0
@Memory_IF_TRUE7
D;JNE
@Memory_IF_FALSE7
0;JMP
(Memory_IF_TRUE7)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET94
D=A
@$RETURN$
0;JMP
($RET94)
(Memory_IF_FALSE7)
@Memory.1 // push static 1
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(Memory_WHILE_EXP1)
@Memory.4 // push static 4
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET95
D=A
@$EQ$
0;JMP
($RET95)
@SP
A=M
A=A-1
M=!M
@Memory.4 // push static 4
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@$RET96
D=A
@$LT$
0;JMP
($RET96)
@SP
AM=M-1
D=M
A=A-1
M=D&M
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@Memory_WHILE_END1
D;JNE
@Memory.4 // push static 4
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@Memory_WHILE_EXP1
0;JMP
(Memory_WHILE_END1)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@$RET97
D=A
@$RETURN$
0;JMP
($RET97)
(Output.init)// initializa local variables
@2
D=A
@R13
M=D
(Output.init_INIT_LOCALS_LOOP)
@Output.init_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Output.init_INIT_LOCALS_LOOP
0;JMP
(Output.init_INIT_LOCALS_END)
@Output.initMap_RETURN_37 // call Output.initMap 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET98
D=A
@$FRAME$
0;JMP
($RET98)
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.initMap
0;JMP
(Output.initMap_RETURN_37)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // pop static 2
M=M-1
A=M
D=M
@Output.2
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // pop static 3
M=M-1
A=M
D=M
@Output.3
M=D
@8 // push constant 8
D=A
@SP
A=M
M=D
@SP
M=M+1
@Array.new_RETURN_38 // call Array.new 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET99
D=A
@$FRAME$
0;JMP
($RET99)
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.new
0;JMP
(Array.new_RETURN_38)
@SP // pop static 1
M=M-1
A=M
D=M
@Output.1
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(Output_WHILE_EXP0)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@8 // push constant 8
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET100
D=A
@$LT$
0;JMP
($RET100)
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@Output_WHILE_END0
D;JNE
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Output.1 // push static 1
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2 // push constant 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@Math.multiply_RETURN_39 // call Math.multiply 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET101
D=A
@$FRAME$
0;JMP
($RET101)
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Math.multiply_RETURN_39)
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@Output_WHILE_EXP0
0;JMP
(Output_WHILE_END0)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET102
D=A
@$RETURN$
0;JMP
($RET102)
(Output.initMap)// initializa local variables
@1
D=A
@R13
M=D
(Output.initMap_INIT_LOCALS_LOOP)
@Output.initMap_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Output.initMap_INIT_LOCALS_LOOP
0;JMP
(Output.initMap_INIT_LOCALS_END)
@127 // push constant 127
D=A
@SP
A=M
M=D
@SP
M=M+1
@Array.new_RETURN_40 // call Array.new 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET103
D=A
@$FRAME$
0;JMP
($RET103)
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.new
0;JMP
(Array.new_RETURN_40)
@SP // pop static 0
M=M-1
A=M
D=M
@Output.0
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_41 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET104
D=A
@$FRAME$
0;JMP
($RET104)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_41)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@32 // push constant 32
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_42 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET105
D=A
@$FRAME$
0;JMP
($RET105)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_42)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@33 // push constant 33
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_43 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET106
D=A
@$FRAME$
0;JMP
($RET106)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_43)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@34 // push constant 34
D=A
@SP
A=M
M=D
@SP
M=M+1
@54 // push constant 54
D=A
@SP
A=M
M=D
@SP
M=M+1
@54 // push constant 54
D=A
@SP
A=M
M=D
@SP
M=M+1
@20 // push constant 20
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_44 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET107
D=A
@$FRAME$
0;JMP
($RET107)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_44)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@35 // push constant 35
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@18 // push constant 18
D=A
@SP
A=M
M=D
@SP
M=M+1
@18 // push constant 18
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@18 // push constant 18
D=A
@SP
A=M
M=D
@SP
M=M+1
@18 // push constant 18
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@18 // push constant 18
D=A
@SP
A=M
M=D
@SP
M=M+1
@18 // push constant 18
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_45 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET108
D=A
@$FRAME$
0;JMP
($RET108)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_45)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@36 // push constant 36
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_46 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET109
D=A
@$FRAME$
0;JMP
($RET109)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_46)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@37 // push constant 37
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@35 // push constant 35
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@49 // push constant 49
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_47 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET110
D=A
@$FRAME$
0;JMP
($RET110)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_47)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@38 // push constant 38
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@54 // push constant 54
D=A
@SP
A=M
M=D
@SP
M=M+1
@27 // push constant 27
D=A
@SP
A=M
M=D
@SP
M=M+1
@27 // push constant 27
D=A
@SP
A=M
M=D
@SP
M=M+1
@27 // push constant 27
D=A
@SP
A=M
M=D
@SP
M=M+1
@54 // push constant 54
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_48 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET111
D=A
@$FRAME$
0;JMP
($RET111)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_48)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@39 // push constant 39
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_49 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET112
D=A
@$FRAME$
0;JMP
($RET112)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_49)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@40 // push constant 40
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_50 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET113
D=A
@$FRAME$
0;JMP
($RET113)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_50)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@41 // push constant 41
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_51 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET114
D=A
@$FRAME$
0;JMP
($RET114)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_51)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@42 // push constant 42
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_52 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET115
D=A
@$FRAME$
0;JMP
($RET115)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_52)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@43 // push constant 43
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_53 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET116
D=A
@$FRAME$
0;JMP
($RET116)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_53)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@44 // push constant 44
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_54 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET117
D=A
@$FRAME$
0;JMP
($RET117)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_54)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@45 // push constant 45
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_55 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET118
D=A
@$FRAME$
0;JMP
($RET118)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_55)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@46 // push constant 46
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_56 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET119
D=A
@$FRAME$
0;JMP
($RET119)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_56)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@47 // push constant 47
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@32 // push constant 32
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_57 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET120
D=A
@$FRAME$
0;JMP
($RET120)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_57)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_58 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET121
D=A
@$FRAME$
0;JMP
($RET121)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_58)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@49 // push constant 49
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@14 // push constant 14
D=A
@SP
A=M
M=D
@SP
M=M+1
@15 // push constant 15
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_59 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET122
D=A
@$FRAME$
0;JMP
($RET122)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_59)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@50 // push constant 50
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_60 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET123
D=A
@$FRAME$
0;JMP
($RET123)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_60)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@28 // push constant 28
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_61 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET124
D=A
@$FRAME$
0;JMP
($RET124)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_61)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@52 // push constant 52
D=A
@SP
A=M
M=D
@SP
M=M+1
@16 // push constant 16
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@28 // push constant 28
D=A
@SP
A=M
M=D
@SP
M=M+1
@26 // push constant 26
D=A
@SP
A=M
M=D
@SP
M=M+1
@25 // push constant 25
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@60 // push constant 60
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_62 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET125
D=A
@$FRAME$
0;JMP
($RET125)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_62)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@53 // push constant 53
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@31 // push constant 31
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_63 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET126
D=A
@$FRAME$
0;JMP
($RET126)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_63)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@54 // push constant 54
D=A
@SP
A=M
M=D
@SP
M=M+1
@28 // push constant 28
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@31 // push constant 31
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_64 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET127
D=A
@$FRAME$
0;JMP
($RET127)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_64)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@55 // push constant 55
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@49 // push constant 49
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_65 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET128
D=A
@$FRAME$
0;JMP
($RET128)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_65)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@56 // push constant 56
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_66 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET129
D=A
@$FRAME$
0;JMP
($RET129)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_66)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@57 // push constant 57
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@62 // push constant 62
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@14 // push constant 14
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_67 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET130
D=A
@$FRAME$
0;JMP
($RET130)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_67)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@58 // push constant 58
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_68 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET131
D=A
@$FRAME$
0;JMP
($RET131)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_68)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@59 // push constant 59
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_69 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET132
D=A
@$FRAME$
0;JMP
($RET132)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_69)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@60 // push constant 60
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_70 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET133
D=A
@$FRAME$
0;JMP
($RET133)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_70)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@61 // push constant 61
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_71 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET134
D=A
@$FRAME$
0;JMP
($RET134)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_71)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@62 // push constant 62
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_72 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET135
D=A
@$FRAME$
0;JMP
($RET135)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_72)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@64 // push constant 64
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@59 // push constant 59
D=A
@SP
A=M
M=D
@SP
M=M+1
@59 // push constant 59
D=A
@SP
A=M
M=D
@SP
M=M+1
@59 // push constant 59
D=A
@SP
A=M
M=D
@SP
M=M+1
@27 // push constant 27
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_73 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET136
D=A
@$FRAME$
0;JMP
($RET136)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_73)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_74 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET137
D=A
@$FRAME$
0;JMP
($RET137)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_74)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@65 // push constant 65
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_75 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET138
D=A
@$FRAME$
0;JMP
($RET138)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_75)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@66 // push constant 66
D=A
@SP
A=M
M=D
@SP
M=M+1
@31 // push constant 31
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@31 // push constant 31
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@31 // push constant 31
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_76 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET139
D=A
@$FRAME$
0;JMP
($RET139)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_76)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@67 // push constant 67
D=A
@SP
A=M
M=D
@SP
M=M+1
@28 // push constant 28
D=A
@SP
A=M
M=D
@SP
M=M+1
@54 // push constant 54
D=A
@SP
A=M
M=D
@SP
M=M+1
@35 // push constant 35
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@35 // push constant 35
D=A
@SP
A=M
M=D
@SP
M=M+1
@54 // push constant 54
D=A
@SP
A=M
M=D
@SP
M=M+1
@28 // push constant 28
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_77 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET140
D=A
@$FRAME$
0;JMP
($RET140)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_77)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@68 // push constant 68
D=A
@SP
A=M
M=D
@SP
M=M+1
@15 // push constant 15
D=A
@SP
A=M
M=D
@SP
M=M+1
@27 // push constant 27
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@27 // push constant 27
D=A
@SP
A=M
M=D
@SP
M=M+1
@15 // push constant 15
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_78 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET141
D=A
@$FRAME$
0;JMP
($RET141)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_78)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@69 // push constant 69
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@35 // push constant 35
D=A
@SP
A=M
M=D
@SP
M=M+1
@11 // push constant 11
D=A
@SP
A=M
M=D
@SP
M=M+1
@15 // push constant 15
D=A
@SP
A=M
M=D
@SP
M=M+1
@11 // push constant 11
D=A
@SP
A=M
M=D
@SP
M=M+1
@35 // push constant 35
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_79 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET142
D=A
@$FRAME$
0;JMP
($RET142)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_79)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@70 // push constant 70
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@35 // push constant 35
D=A
@SP
A=M
M=D
@SP
M=M+1
@11 // push constant 11
D=A
@SP
A=M
M=D
@SP
M=M+1
@15 // push constant 15
D=A
@SP
A=M
M=D
@SP
M=M+1
@11 // push constant 11
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_80 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET143
D=A
@$FRAME$
0;JMP
($RET143)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_80)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@71 // push constant 71
D=A
@SP
A=M
M=D
@SP
M=M+1
@28 // push constant 28
D=A
@SP
A=M
M=D
@SP
M=M+1
@54 // push constant 54
D=A
@SP
A=M
M=D
@SP
M=M+1
@35 // push constant 35
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@59 // push constant 59
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@54 // push constant 54
D=A
@SP
A=M
M=D
@SP
M=M+1
@44 // push constant 44
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_81 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET144
D=A
@$FRAME$
0;JMP
($RET144)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_81)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@72 // push constant 72
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_82 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET145
D=A
@$FRAME$
0;JMP
($RET145)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_82)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@73 // push constant 73
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_83 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET146
D=A
@$FRAME$
0;JMP
($RET146)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_83)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@74 // push constant 74
D=A
@SP
A=M
M=D
@SP
M=M+1
@60 // push constant 60
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@27 // push constant 27
D=A
@SP
A=M
M=D
@SP
M=M+1
@27 // push constant 27
D=A
@SP
A=M
M=D
@SP
M=M+1
@14 // push constant 14
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_84 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET147
D=A
@$FRAME$
0;JMP
($RET147)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_84)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@75 // push constant 75
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@27 // push constant 27
D=A
@SP
A=M
M=D
@SP
M=M+1
@15 // push constant 15
D=A
@SP
A=M
M=D
@SP
M=M+1
@27 // push constant 27
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_85 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET148
D=A
@$FRAME$
0;JMP
($RET148)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_85)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@76 // push constant 76
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@35 // push constant 35
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_86 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET149
D=A
@$FRAME$
0;JMP
($RET149)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_86)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@77 // push constant 77
D=A
@SP
A=M
M=D
@SP
M=M+1
@33 // push constant 33
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_87 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET150
D=A
@$FRAME$
0;JMP
($RET150)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_87)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@78 // push constant 78
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@55 // push constant 55
D=A
@SP
A=M
M=D
@SP
M=M+1
@55 // push constant 55
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@59 // push constant 59
D=A
@SP
A=M
M=D
@SP
M=M+1
@59 // push constant 59
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_88 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET151
D=A
@$FRAME$
0;JMP
($RET151)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_88)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@79 // push constant 79
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_89 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET152
D=A
@$FRAME$
0;JMP
($RET152)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_89)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@80 // push constant 80
D=A
@SP
A=M
M=D
@SP
M=M+1
@31 // push constant 31
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@31 // push constant 31
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_90 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET153
D=A
@$FRAME$
0;JMP
($RET153)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_90)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@81 // push constant 81
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@59 // push constant 59
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_91 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET154
D=A
@$FRAME$
0;JMP
($RET154)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_91)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@82 // push constant 82
D=A
@SP
A=M
M=D
@SP
M=M+1
@31 // push constant 31
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@31 // push constant 31
D=A
@SP
A=M
M=D
@SP
M=M+1
@27 // push constant 27
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_92 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET155
D=A
@$FRAME$
0;JMP
($RET155)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_92)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@83 // push constant 83
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@28 // push constant 28
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_93 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET156
D=A
@$FRAME$
0;JMP
($RET156)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_93)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@84 // push constant 84
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@45 // push constant 45
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_94 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET157
D=A
@$FRAME$
0;JMP
($RET157)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_94)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@85 // push constant 85
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_95 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET158
D=A
@$FRAME$
0;JMP
($RET158)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_95)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@86 // push constant 86
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_96 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET159
D=A
@$FRAME$
0;JMP
($RET159)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_96)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@87 // push constant 87
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@18 // push constant 18
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_97 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET160
D=A
@$FRAME$
0;JMP
($RET160)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_97)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@88 // push constant 88
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_98 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET161
D=A
@$FRAME$
0;JMP
($RET161)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_98)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@89 // push constant 89
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_99 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET162
D=A
@$FRAME$
0;JMP
($RET162)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_99)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@90 // push constant 90
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@49 // push constant 49
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@35 // push constant 35
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_100 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET163
D=A
@$FRAME$
0;JMP
($RET163)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_100)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@91 // push constant 91
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_101 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET164
D=A
@$FRAME$
0;JMP
($RET164)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_101)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@92 // push constant 92
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@32 // push constant 32
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_102 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET165
D=A
@$FRAME$
0;JMP
($RET165)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_102)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@93 // push constant 93
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_103 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET166
D=A
@$FRAME$
0;JMP
($RET166)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_103)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@94 // push constant 94
D=A
@SP
A=M
M=D
@SP
M=M+1
@8 // push constant 8
D=A
@SP
A=M
M=D
@SP
M=M+1
@28 // push constant 28
D=A
@SP
A=M
M=D
@SP
M=M+1
@54 // push constant 54
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_104 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET167
D=A
@$FRAME$
0;JMP
($RET167)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_104)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@95 // push constant 95
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_105 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET168
D=A
@$FRAME$
0;JMP
($RET168)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_105)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@96 // push constant 96
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_106 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET169
D=A
@$FRAME$
0;JMP
($RET169)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_106)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@97 // push constant 97
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@14 // push constant 14
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@27 // push constant 27
D=A
@SP
A=M
M=D
@SP
M=M+1
@27 // push constant 27
D=A
@SP
A=M
M=D
@SP
M=M+1
@54 // push constant 54
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_107 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET170
D=A
@$FRAME$
0;JMP
($RET170)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_107)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@98 // push constant 98
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@15 // push constant 15
D=A
@SP
A=M
M=D
@SP
M=M+1
@27 // push constant 27
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_108 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET171
D=A
@$FRAME$
0;JMP
($RET171)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_108)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@99 // push constant 99
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_109 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET172
D=A
@$FRAME$
0;JMP
($RET172)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_109)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@100 // push constant 100
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@60 // push constant 60
D=A
@SP
A=M
M=D
@SP
M=M+1
@54 // push constant 54
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_110 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET173
D=A
@$FRAME$
0;JMP
($RET173)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_110)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@101 // push constant 101
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_111 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET174
D=A
@$FRAME$
0;JMP
($RET174)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_111)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@102 // push constant 102
D=A
@SP
A=M
M=D
@SP
M=M+1
@28 // push constant 28
D=A
@SP
A=M
M=D
@SP
M=M+1
@54 // push constant 54
D=A
@SP
A=M
M=D
@SP
M=M+1
@38 // push constant 38
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@15 // push constant 15
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@15 // push constant 15
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_112 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET175
D=A
@$FRAME$
0;JMP
($RET175)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_112)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@103 // push constant 103
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@62 // push constant 62
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_113 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET176
D=A
@$FRAME$
0;JMP
($RET176)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_113)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@104 // push constant 104
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@27 // push constant 27
D=A
@SP
A=M
M=D
@SP
M=M+1
@55 // push constant 55
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_114 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET177
D=A
@$FRAME$
0;JMP
($RET177)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_114)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@105 // push constant 105
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@14 // push constant 14
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_115 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET178
D=A
@$FRAME$
0;JMP
($RET178)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_115)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@106 // push constant 106
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@56 // push constant 56
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_116 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET179
D=A
@$FRAME$
0;JMP
($RET179)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_116)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@107 // push constant 107
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@27 // push constant 27
D=A
@SP
A=M
M=D
@SP
M=M+1
@15 // push constant 15
D=A
@SP
A=M
M=D
@SP
M=M+1
@15 // push constant 15
D=A
@SP
A=M
M=D
@SP
M=M+1
@27 // push constant 27
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_117 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET180
D=A
@$FRAME$
0;JMP
($RET180)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_117)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@108 // push constant 108
D=A
@SP
A=M
M=D
@SP
M=M+1
@14 // push constant 14
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_118 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET181
D=A
@$FRAME$
0;JMP
($RET181)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_118)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@109 // push constant 109
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@29 // push constant 29
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@43 // push constant 43
D=A
@SP
A=M
M=D
@SP
M=M+1
@43 // push constant 43
D=A
@SP
A=M
M=D
@SP
M=M+1
@43 // push constant 43
D=A
@SP
A=M
M=D
@SP
M=M+1
@43 // push constant 43
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_119 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET182
D=A
@$FRAME$
0;JMP
($RET182)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_119)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@110 // push constant 110
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@29 // push constant 29
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_120 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET183
D=A
@$FRAME$
0;JMP
($RET183)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_120)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@111 // push constant 111
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_121 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET184
D=A
@$FRAME$
0;JMP
($RET184)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_121)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@112 // push constant 112
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@31 // push constant 31
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_122 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET185
D=A
@$FRAME$
0;JMP
($RET185)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_122)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@113 // push constant 113
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@62 // push constant 62
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_123 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET186
D=A
@$FRAME$
0;JMP
($RET186)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_123)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@114 // push constant 114
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@29 // push constant 29
D=A
@SP
A=M
M=D
@SP
M=M+1
@55 // push constant 55
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@7 // push constant 7
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_124 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET187
D=A
@$FRAME$
0;JMP
($RET187)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_124)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@115 // push constant 115
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_125 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET188
D=A
@$FRAME$
0;JMP
($RET188)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_125)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@116 // push constant 116
D=A
@SP
A=M
M=D
@SP
M=M+1
@4 // push constant 4
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@15 // push constant 15
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@54 // push constant 54
D=A
@SP
A=M
M=D
@SP
M=M+1
@28 // push constant 28
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_126 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET189
D=A
@$FRAME$
0;JMP
($RET189)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_126)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@117 // push constant 117
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@27 // push constant 27
D=A
@SP
A=M
M=D
@SP
M=M+1
@27 // push constant 27
D=A
@SP
A=M
M=D
@SP
M=M+1
@27 // push constant 27
D=A
@SP
A=M
M=D
@SP
M=M+1
@27 // push constant 27
D=A
@SP
A=M
M=D
@SP
M=M+1
@27 // push constant 27
D=A
@SP
A=M
M=D
@SP
M=M+1
@54 // push constant 54
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_127 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET190
D=A
@$FRAME$
0;JMP
($RET190)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_127)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@118 // push constant 118
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_128 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET191
D=A
@$FRAME$
0;JMP
($RET191)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_128)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@119 // push constant 119
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@18 // push constant 18
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_129 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET192
D=A
@$FRAME$
0;JMP
($RET192)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_129)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@120 // push constant 120
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_130 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET193
D=A
@$FRAME$
0;JMP
($RET193)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_130)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@121 // push constant 121
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@62 // push constant 62
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@15 // push constant 15
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_131 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET194
D=A
@$FRAME$
0;JMP
($RET194)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_131)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@122 // push constant 122
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@27 // push constant 27
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_132 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET195
D=A
@$FRAME$
0;JMP
($RET195)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_132)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@123 // push constant 123
D=A
@SP
A=M
M=D
@SP
M=M+1
@56 // push constant 56
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@7 // push constant 7
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@56 // push constant 56
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_133 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET196
D=A
@$FRAME$
0;JMP
($RET196)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_133)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@124 // push constant 124
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_134 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET197
D=A
@$FRAME$
0;JMP
($RET197)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_134)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@125 // push constant 125
D=A
@SP
A=M
M=D
@SP
M=M+1
@7 // push constant 7
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@56 // push constant 56
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@7 // push constant 7
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_135 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET198
D=A
@$FRAME$
0;JMP
($RET198)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_135)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@126 // push constant 126
D=A
@SP
A=M
M=D
@SP
M=M+1
@38 // push constant 38
D=A
@SP
A=M
M=D
@SP
M=M+1
@45 // push constant 45
D=A
@SP
A=M
M=D
@SP
M=M+1
@25 // push constant 25
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_136 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET199
D=A
@$FRAME$
0;JMP
($RET199)
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_136)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET200
D=A
@$RETURN$
0;JMP
($RET200)
(Output.create)// initializa local variables
@1
D=A
@R13
M=D
(Output.create_INIT_LOCALS_LOOP)
@Output.create_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Output.create_INIT_LOCALS_LOOP
0;JMP
(Output.create_INIT_LOCALS_END)
@11 // push constant 11
D=A
@SP
A=M
M=D
@SP
M=M+1
@Array.new_RETURN_137 // call Array.new 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET201
D=A
@$FRAME$
0;JMP
($RET201)
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.new
0;JMP
(Array.new_RETURN_137)
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Output.0 // push static 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@ARG // push argument 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@2 // push constant 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@ARG // push argument 3
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@ARG // push argument 4
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@4 // push constant 4
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@ARG // push argument 5
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@5 // push constant 5
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@ARG // push argument 6
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@ARG // push argument 7
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@7 // push constant 7
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@ARG // push argument 8
D=M
@8
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@8 // push constant 8
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@ARG // push argument 9
D=M
@9
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@9 // push constant 9
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@ARG // push argument 10
D=M
@10
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@10 // push constant 10
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@ARG // push argument 11
D=M
@11
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET202
D=A
@$RETURN$
0;JMP
($RET202)
(Output.getMap)// initializa local variables
@0
D=A
@R13
M=D
(Output.getMap_INIT_LOCALS_LOOP)
@Output.getMap_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Output.getMap_INIT_LOCALS_LOOP
0;JMP
(Output.getMap_INIT_LOCALS_END)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@32 // push constant 32
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET203
D=A
@$LT$
0;JMP
($RET203)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@126 // push constant 126
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET204
D=A
@$GT$
0;JMP
($RET204)
@SP
AM=M-1
D=M
A=A-1
M=D|M
@SP
AM=M-1
D=M
M=0
@Output_IF_TRUE0
D;JNE
@Output_IF_FALSE0
0;JMP
(Output_IF_TRUE0)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@ARG // pop argument 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(Output_IF_FALSE0)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Output.0 // push static 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@$RET205
D=A
@$RETURN$
0;JMP
($RET205)
(Output.moveCursor)// initializa local variables
@0
D=A
@R13
M=D
(Output.moveCursor_INIT_LOCALS_LOOP)
@Output.moveCursor_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Output.moveCursor_INIT_LOCALS_LOOP
0;JMP
(Output.moveCursor_INIT_LOCALS_END)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop static 2
M=M-1
A=M
D=M
@Output.2
M=D
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop static 3
M=M-1
A=M
D=M
@Output.3
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET206
D=A
@$RETURN$
0;JMP
($RET206)
(Output.printChar)// initializa local variables
@6
D=A
@R13
M=D
(Output.printChar_INIT_LOCALS_LOOP)
@Output.printChar_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Output.printChar_INIT_LOCALS_LOOP
0;JMP
(Output.printChar_INIT_LOCALS_END)
@Output.2 // push static 2
D=M
@SP
A=M
M=D
@SP
M=M+1
@11 // push constant 11
D=A
@SP
A=M
M=D
@SP
M=M+1
@Math.multiply_RETURN_138 // call Math.multiply 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET207
D=A
@$FRAME$
0;JMP
($RET207)
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Math.multiply_RETURN_138)
@LCL // pop local 4
D=M
@4
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@Output.3 // push static 3
D=M
@SP
A=M
M=D
@SP
M=M+1
@8 // push constant 8
D=A
@SP
A=M
M=D
@SP
M=M+1
@Math.multiply_RETURN_139 // call Math.multiply 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET208
D=A
@$FRAME$
0;JMP
($RET208)
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Math.multiply_RETURN_139)
@LCL // pop local 5
D=M
@5
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Output.getMap_RETURN_140 // call Output.getMap 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET209
D=A
@$FRAME$
0;JMP
($RET209)
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.getMap
0;JMP
(Output.getMap_RETURN_140)
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 2
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(Output_WHILE_EXP1)
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@11 // push constant 11
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET210
D=A
@$LT$
0;JMP
($RET210)
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@Output_WHILE_END1
D;JNE
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 2
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 3
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(Output_WHILE_EXP2)
@LCL // push local 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@8 // push constant 8
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET211
D=A
@$LT$
0;JMP
($RET211)
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@Output_WHILE_END2
D;JNE
@LCL // push local 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Output.1 // push static 1
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 3
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D&M
@Screen.setColor_RETURN_141 // call Screen.setColor 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET212
D=A
@$FRAME$
0;JMP
($RET212)
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.setColor
0;JMP
(Screen.setColor_RETURN_141)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@LCL // push local 5
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // push local 4
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@Screen.drawPixel_RETURN_142 // call Screen.drawPixel 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET213
D=A
@$FRAME$
0;JMP
($RET213)
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawPixel
0;JMP
(Screen.drawPixel_RETURN_142)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@LCL // push local 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 2
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@Output_WHILE_EXP2
0;JMP
(Output_WHILE_END2)
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@Output_WHILE_EXP1
0;JMP
(Output_WHILE_END1)
@Output.advanceCursor_RETURN_143 // call Output.advanceCursor 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET214
D=A
@$FRAME$
0;JMP
($RET214)
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.advanceCursor
0;JMP
(Output.advanceCursor_RETURN_143)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET215
D=A
@$RETURN$
0;JMP
($RET215)
(Output.advanceCursor)// initializa local variables
@0
D=A
@R13
M=D
(Output.advanceCursor_INIT_LOCALS_LOOP)
@Output.advanceCursor_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Output.advanceCursor_INIT_LOCALS_LOOP
0;JMP
(Output.advanceCursor_INIT_LOCALS_END)
@Output.3 // push static 3
D=M
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET216
D=A
@$EQ$
0;JMP
($RET216)
@SP
AM=M-1
D=M
M=0
@Output_IF_TRUE1
D;JNE
@Output_IF_FALSE1
0;JMP
(Output_IF_TRUE1)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // pop static 3
M=M-1
A=M
D=M
@Output.3
M=D
@Output.2 // push static 2
D=M
@SP
A=M
M=D
@SP
M=M+1
@22 // push constant 22
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET217
D=A
@$EQ$
0;JMP
($RET217)
@SP
AM=M-1
D=M
M=0
@Output_IF_TRUE2
D;JNE
@Output_IF_FALSE2
0;JMP
(Output_IF_TRUE2)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // pop static 2
M=M-1
A=M
D=M
@Output.2
M=D
@Output_IF_END2
0;JMP
(Output_IF_FALSE2)
@Output.2 // push static 2
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop static 2
M=M-1
A=M
D=M
@Output.2
M=D
(Output_IF_END2)
@Output_IF_END1
0;JMP
(Output_IF_FALSE1)
@Output.3 // push static 3
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop static 3
M=M-1
A=M
D=M
@Output.3
M=D
(Output_IF_END1)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET218
D=A
@$RETURN$
0;JMP
($RET218)
(Output.printString)// initializa local variables
@1
D=A
@R13
M=D
(Output.printString_INIT_LOCALS_LOOP)
@Output.printString_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Output.printString_INIT_LOCALS_LOOP
0;JMP
(Output.printString_INIT_LOCALS_END)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(Output_WHILE_EXP3)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@String.length_RETURN_144 // call String.length 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET219
D=A
@$FRAME$
0;JMP
($RET219)
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.length
0;JMP
(String.length_RETURN_144)
@$RET220
D=A
@$LT$
0;JMP
($RET220)
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@Output_WHILE_END3
D;JNE
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@String.charAt_RETURN_145 // call String.charAt 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET221
D=A
@$FRAME$
0;JMP
($RET221)
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.charAt
0;JMP
(String.charAt_RETURN_145)
@Output.printChar_RETURN_146 // call Output.printChar 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET222
D=A
@$FRAME$
0;JMP
($RET222)
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printChar
0;JMP
(Output.printChar_RETURN_146)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@Output_WHILE_EXP3
0;JMP
(Output_WHILE_END3)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET223
D=A
@$RETURN$
0;JMP
($RET223)
(Output.printInt)// initializa local variables
@1
D=A
@R13
M=D
(Output.printInt_INIT_LOCALS_LOOP)
@Output.printInt_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Output.printInt_INIT_LOCALS_LOOP
0;JMP
(Output.printInt_INIT_LOCALS_END)
@10 // push constant 10
D=A
@SP
A=M
M=D
@SP
M=M+1
@String.new_RETURN_147 // call String.new 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET224
D=A
@$FRAME$
0;JMP
($RET224)
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.new
0;JMP
(String.new_RETURN_147)
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@String.setInt_RETURN_148 // call String.setInt 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET225
D=A
@$FRAME$
0;JMP
($RET225)
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.setInt
0;JMP
(String.setInt_RETURN_148)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Output.printString_RETURN_149 // call Output.printString 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET226
D=A
@$FRAME$
0;JMP
($RET226)
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printString
0;JMP
(Output.printString_RETURN_149)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@String.dispose_RETURN_150 // call String.dispose 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET227
D=A
@$FRAME$
0;JMP
($RET227)
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.dispose
0;JMP
(String.dispose_RETURN_150)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET228
D=A
@$RETURN$
0;JMP
($RET228)
(Output.println)// initializa local variables
@0
D=A
@R13
M=D
(Output.println_INIT_LOCALS_LOOP)
@Output.println_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Output.println_INIT_LOCALS_LOOP
0;JMP
(Output.println_INIT_LOCALS_END)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // pop static 3
M=M-1
A=M
D=M
@Output.3
M=D
@Output.2 // push static 2
D=M
@SP
A=M
M=D
@SP
M=M+1
@22 // push constant 22
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET229
D=A
@$EQ$
0;JMP
($RET229)
@SP
AM=M-1
D=M
M=0
@Output_IF_TRUE3
D;JNE
@Output_IF_FALSE3
0;JMP
(Output_IF_TRUE3)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // pop static 2
M=M-1
A=M
D=M
@Output.2
M=D
@Output_IF_END3
0;JMP
(Output_IF_FALSE3)
@Output.2 // push static 2
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop static 2
M=M-1
A=M
D=M
@Output.2
M=D
(Output_IF_END3)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET230
D=A
@$RETURN$
0;JMP
($RET230)
(Output.backSpace)// initializa local variables
@0
D=A
@R13
M=D
(Output.backSpace_INIT_LOCALS_LOOP)
@Output.backSpace_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Output.backSpace_INIT_LOCALS_LOOP
0;JMP
(Output.backSpace_INIT_LOCALS_END)
@Output.3 // push static 3
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET231
D=A
@$EQ$
0;JMP
($RET231)
@SP
AM=M-1
D=M
M=0
@Output_IF_TRUE4
D;JNE
@Output_IF_FALSE4
0;JMP
(Output_IF_TRUE4)
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // pop static 3
M=M-1
A=M
D=M
@Output.3
M=D
@Output.2 // push static 2
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET232
D=A
@$EQ$
0;JMP
($RET232)
@SP
AM=M-1
D=M
M=0
@Output_IF_TRUE5
D;JNE
@Output_IF_FALSE5
0;JMP
(Output_IF_TRUE5)
@22 // push constant 22
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // pop static 2
M=M-1
A=M
D=M
@Output.2
M=D
@Output_IF_END5
0;JMP
(Output_IF_FALSE5)
@Output.2 // push static 2
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP // pop static 2
M=M-1
A=M
D=M
@Output.2
M=D
(Output_IF_END5)
@Output_IF_END4
0;JMP
(Output_IF_FALSE4)
@Output.3 // push static 3
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP // pop static 3
M=M-1
A=M
D=M
@Output.3
M=D
(Output_IF_END4)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET233
D=A
@$RETURN$
0;JMP
($RET233)
(Screen.init)// initializa local variables
@2
D=A
@R13
M=D
(Screen.init_INIT_LOCALS_LOOP)
@Screen.init_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Screen.init_INIT_LOCALS_LOOP
0;JMP
(Screen.init_INIT_LOCALS_END)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@16384 // push constant 16384
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // pop static 2
M=M-1
A=M
D=M
@Screen.2
M=D
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=!M
@SP // pop static 0
M=M-1
A=M
D=M
@Screen.0
M=D
@16 // push constant 16
D=A
@SP
A=M
M=D
@SP
M=M+1
@Array.new_RETURN_151 // call Array.new 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET234
D=A
@$FRAME$
0;JMP
($RET234)
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.new
0;JMP
(Array.new_RETURN_151)
@SP // pop static 1
M=M-1
A=M
D=M
@Screen.1
M=D
(Screen_WHILE_EXP0)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@16 // push constant 16
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET235
D=A
@$LT$
0;JMP
($RET235)
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@Screen_WHILE_END0
D;JNE
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Screen.1 // push static 1
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2 // push constant 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@Math.multiply_RETURN_152 // call Math.multiply 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET236
D=A
@$FRAME$
0;JMP
($RET236)
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Math.multiply_RETURN_152)
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@Screen_WHILE_EXP0
0;JMP
(Screen_WHILE_END0)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET237
D=A
@$RETURN$
0;JMP
($RET237)
(Screen.clearScreen)// initializa local variables
@1
D=A
@R13
M=D
(Screen.clearScreen_INIT_LOCALS_LOOP)
@Screen.clearScreen_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Screen.clearScreen_INIT_LOCALS_LOOP
0;JMP
(Screen.clearScreen_INIT_LOCALS_END)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(Screen_WHILE_EXP1)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@8192 // push constant 8192
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET238
D=A
@$LT$
0;JMP
($RET238)
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@Screen_WHILE_END1
D;JNE
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Screen.2 // push static 2
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@Screen_WHILE_EXP1
0;JMP
(Screen_WHILE_END1)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET239
D=A
@$RETURN$
0;JMP
($RET239)
(Screen.setColor)// initializa local variables
@0
D=A
@R13
M=D
(Screen.setColor_INIT_LOCALS_LOOP)
@Screen.setColor_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Screen.setColor_INIT_LOCALS_LOOP
0;JMP
(Screen.setColor_INIT_LOCALS_END)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop static 0
M=M-1
A=M
D=M
@Screen.0
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET240
D=A
@$RETURN$
0;JMP
($RET240)
(Screen.drawPixel)// initializa local variables
@2
D=A
@R13
M=D
(Screen.drawPixel_INIT_LOCALS_LOOP)
@Screen.drawPixel_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Screen.drawPixel_INIT_LOCALS_LOOP
0;JMP
(Screen.drawPixel_INIT_LOCALS_END)
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@32 // push constant 32
D=A
@SP
A=M
M=D
@SP
M=M+1
@Math.multiply_RETURN_153 // call Math.multiply 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET241
D=A
@$FRAME$
0;JMP
($RET241)
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Math.multiply_RETURN_153)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@16 // push constant 16
D=A
@SP
A=M
M=D
@SP
M=M+1
@Math.divide_RETURN_154 // call Math.divide 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET242
D=A
@$FRAME$
0;JMP
($RET242)
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(Math.divide_RETURN_154)
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@16 // push constant 16
D=A
@SP
A=M
M=D
@SP
M=M+1
@Math.divide_RETURN_155 // call Math.divide 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET243
D=A
@$FRAME$
0;JMP
($RET243)
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(Math.divide_RETURN_155)
@16 // push constant 16
D=A
@SP
A=M
M=D
@SP
M=M+1
@Math.multiply_RETURN_156 // call Math.multiply 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET244
D=A
@$FRAME$
0;JMP
($RET244)
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Math.multiply_RETURN_156)
@SP
AM=M-1
D=M
A=A-1
M=M-D
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@Screen.0 // push static 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
M=0
@Screen_IF_TRUE0
D;JNE
@Screen_IF_FALSE0
0;JMP
(Screen_IF_TRUE0)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Screen.2 // push static 2
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Screen.2 // push static 2
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Screen.1 // push static 1
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D|M
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@Screen_IF_END0
0;JMP
(Screen_IF_FALSE0)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Screen.2 // push static 2
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Screen.2 // push static 2
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Screen.1 // push static 1
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
A=A-1
M=D&M
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(Screen_IF_END0)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET245
D=A
@$RETURN$
0;JMP
($RET245)
(Screen.drawLine)// initializa local variables
@8
D=A
@R13
M=D
(Screen.drawLine_INIT_LOCALS_LOOP)
@Screen.drawLine_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Screen.drawLine_INIT_LOCALS_LOOP
0;JMP
(Screen.drawLine_INIT_LOCALS_END)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@$RET246
D=A
@$LT$
0;JMP
($RET246)
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@Screen_IF_TRUE1
D;JNE
@Screen_IF_FALSE1
0;JMP
(Screen_IF_TRUE1)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 7
D=M
@7
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // pop argument 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 7
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // pop argument 2
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 7
D=M
@7
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 3
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // pop argument 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 7
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // pop argument 3
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(Screen_IF_FALSE1)
@ARG // push argument 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@LCL // pop local 4
D=M
@4
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 3
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@LCL // pop local 5
D=M
@5
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 5
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET247
D=A
@$LT$
0;JMP
($RET247)
@SP
AM=M-1
D=M
M=0
@Screen_IF_TRUE2
D;JNE
@Screen_IF_FALSE2
0;JMP
(Screen_IF_TRUE2)
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=-M
@LCL // pop local 3
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@Screen_IF_END2
0;JMP
(Screen_IF_FALSE2)
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 3
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(Screen_IF_END2)
@LCL // push local 5
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET248
D=A
@$EQ$
0;JMP
($RET248)
@SP
AM=M-1
D=M
M=0
@Screen_IF_TRUE3
D;JNE
@Screen_IF_FALSE3
0;JMP
(Screen_IF_TRUE3)
(Screen_WHILE_EXP2)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 4
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@$RET249
D=A
@$EQ$
0;JMP
($RET249)
@SP
A=M
A=A-1
M=!M
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@Screen_WHILE_END2
D;JNE
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Screen.drawPixel_RETURN_157 // call Screen.drawPixel 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET250
D=A
@$FRAME$
0;JMP
($RET250)
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawPixel
0;JMP
(Screen.drawPixel_RETURN_157)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@Screen_WHILE_EXP2
0;JMP
(Screen_WHILE_END2)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET251
D=A
@$RETURN$
0;JMP
($RET251)
(Screen_IF_FALSE3)
@LCL // push local 4
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET252
D=A
@$EQ$
0;JMP
($RET252)
@SP
AM=M-1
D=M
M=0
@Screen_IF_TRUE4
D;JNE
@Screen_IF_FALSE4
0;JMP
(Screen_IF_TRUE4)
(Screen_WHILE_EXP3)
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 5
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@$RET253
D=A
@$EQ$
0;JMP
($RET253)
@SP
A=M
A=A-1
M=!M
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@Screen_WHILE_END3
D;JNE
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 3
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@Screen.drawPixel_RETURN_158 // call Screen.drawPixel 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET254
D=A
@$FRAME$
0;JMP
($RET254)
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawPixel
0;JMP
(Screen.drawPixel_RETURN_158)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@Screen_WHILE_EXP3
0;JMP
(Screen_WHILE_END3)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET255
D=A
@$RETURN$
0;JMP
($RET255)
(Screen_IF_FALSE4)
(Screen_WHILE_EXP4)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 4
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@$RET256
D=A
@$LT$
0;JMP
($RET256)
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 5
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@$RET257
D=A
@$LT$
0;JMP
($RET257)
@SP
AM=M-1
D=M
A=A-1
M=D&M
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@Screen_WHILE_END4
D;JNE
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 5
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Math.multiply_RETURN_159 // call Math.multiply 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET258
D=A
@$FRAME$
0;JMP
($RET258)
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Math.multiply_RETURN_159)
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 4
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Math.multiply_RETURN_160 // call Math.multiply 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET259
D=A
@$FRAME$
0;JMP
($RET259)
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Math.multiply_RETURN_160)
@SP
AM=M-1
D=M
A=A-1
M=M-D
@LCL // pop local 6
D=M
@6
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 6
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET260
D=A
@$LT$
0;JMP
($RET260)
@SP
AM=M-1
D=M
M=0
@Screen_IF_TRUE5
D;JNE
@Screen_IF_FALSE5
0;JMP
(Screen_IF_TRUE5)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@Screen_IF_END5
0;JMP
(Screen_IF_FALSE5)
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(Screen_IF_END5)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@Screen.drawPixel_RETURN_161 // call Screen.drawPixel 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET261
D=A
@$FRAME$
0;JMP
($RET261)
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawPixel
0;JMP
(Screen.drawPixel_RETURN_161)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@Screen_WHILE_EXP4
0;JMP
(Screen_WHILE_END4)
(Screen_WHILE_EXP5)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 4
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@$RET262
D=A
@$LT$
0;JMP
($RET262)
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 5
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@$RET263
D=A
@$GT$
0;JMP
($RET263)
@SP
AM=M-1
D=M
A=A-1
M=D&M
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@Screen_WHILE_END5
D;JNE
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 5
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Math.multiply_RETURN_162 // call Math.multiply 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET264
D=A
@$FRAME$
0;JMP
($RET264)
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Math.multiply_RETURN_162)
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 4
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Math.multiply_RETURN_163 // call Math.multiply 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET265
D=A
@$FRAME$
0;JMP
($RET265)
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Math.multiply_RETURN_163)
@SP
AM=M-1
D=M
A=A-1
M=M-D
@LCL // pop local 6
D=M
@6
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 6
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET266
D=A
@$GT$
0;JMP
($RET266)
@SP
AM=M-1
D=M
M=0
@Screen_IF_TRUE6
D;JNE
@Screen_IF_FALSE6
0;JMP
(Screen_IF_TRUE6)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@Screen_IF_END6
0;JMP
(Screen_IF_FALSE6)
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(Screen_IF_END6)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@Screen.drawPixel_RETURN_164 // call Screen.drawPixel 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET267
D=A
@$FRAME$
0;JMP
($RET267)
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawPixel
0;JMP
(Screen.drawPixel_RETURN_164)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@Screen_WHILE_EXP5
0;JMP
(Screen_WHILE_END5)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET268
D=A
@$RETURN$
0;JMP
($RET268)
(Screen.drawRectangle)// initializa local variables
@1
D=A
@R13
M=D
(Screen.drawRectangle_INIT_LOCALS_LOOP)
@Screen.drawRectangle_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Screen.drawRectangle_INIT_LOCALS_LOOP
0;JMP
(Screen.drawRectangle_INIT_LOCALS_END)
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(Screen_WHILE_EXP6)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 3
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@$RET269
D=A
@$GT$
0;JMP
($RET269)
@SP
A=M
A=A-1
M=!M
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@Screen_WHILE_END6
D;JNE
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Screen.drawHorizontalLine_RETURN_165 // call Screen.drawHorizontalLine 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET270
D=A
@$FRAME$
0;JMP
($RET270)
@3
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawHorizontalLine
0;JMP
(Screen.drawHorizontalLine_RETURN_165)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@Screen_WHILE_EXP6
0;JMP
(Screen_WHILE_END6)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET271
D=A
@$RETURN$
0;JMP
($RET271)
(Screen.drawHorizontalLine)// initializa local variables
@4
D=A
@R13
M=D
(Screen.drawHorizontalLine_INIT_LOCALS_LOOP)
@Screen.drawHorizontalLine_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Screen.drawHorizontalLine_INIT_LOCALS_LOOP
0;JMP
(Screen.drawHorizontalLine_INIT_LOCALS_END)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@15 // push constant 15
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D&M
@LCL // pop local 2
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@15 // push constant 15
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D&M
@LCL // pop local 3
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@32 // push constant 32
D=A
@SP
A=M
M=D
@SP
M=M+1
@Math.multiply_RETURN_166 // call Math.multiply 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET272
D=A
@$FRAME$
0;JMP
($RET272)
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Math.multiply_RETURN_166)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@16 // push constant 16
D=A
@SP
A=M
M=D
@SP
M=M+1
@Math.divide_RETURN_167 // call Math.divide 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET273
D=A
@$FRAME$
0;JMP
($RET273)
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(Math.divide_RETURN_167)
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@32 // push constant 32
D=A
@SP
A=M
M=D
@SP
M=M+1
@Math.multiply_RETURN_168 // call Math.multiply 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET274
D=A
@$FRAME$
0;JMP
($RET274)
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Math.multiply_RETURN_168)
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@16 // push constant 16
D=A
@SP
A=M
M=D
@SP
M=M+1
@Math.divide_RETURN_169 // call Math.divide 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET275
D=A
@$FRAME$
0;JMP
($RET275)
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(Math.divide_RETURN_169)
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // push local 3
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET276
D=A
@$EQ$
0;JMP
($RET276)
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@$RET277
D=A
@$EQ$
0;JMP
($RET277)
@SP
AM=M-1
D=M
M=0
@Screen_IF_TRUE7
D;JNE
@Screen_IF_FALSE7
0;JMP
(Screen_IF_TRUE7)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Screen.draw_small_line_RETURN_170 // call Screen.draw_small_line 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET278
D=A
@$FRAME$
0;JMP
($RET278)
@3
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.draw_small_line
0;JMP
(Screen.draw_small_line_RETURN_170)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@Screen_IF_END7
0;JMP
(Screen_IF_FALSE7)
@LCL // push local 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET279
D=A
@$EQ$
0;JMP
($RET279)
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@Screen_IF_TRUE8
D;JNE
@Screen_IF_FALSE8
0;JMP
(Screen_IF_TRUE8)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@16 // push constant 16
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // push local 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@ARG // push argument 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Screen.draw_small_line_RETURN_171 // call Screen.draw_small_line 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET280
D=A
@$FRAME$
0;JMP
($RET280)
@3
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.draw_small_line
0;JMP
(Screen.draw_small_line_RETURN_171)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
(Screen_IF_FALSE8)
@LCL // push local 3
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET281
D=A
@$EQ$
0;JMP
($RET281)
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@Screen_IF_TRUE9
D;JNE
@Screen_IF_FALSE9
0;JMP
(Screen_IF_TRUE9)
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 3
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Screen.draw_small_line_RETURN_172 // call Screen.draw_small_line 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET282
D=A
@$FRAME$
0;JMP
($RET282)
@3
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.draw_small_line
0;JMP
(Screen.draw_small_line_RETURN_172)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
(Screen_IF_FALSE9)
(Screen_WHILE_EXP7)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@$RET283
D=A
@$GT$
0;JMP
($RET283)
@SP
A=M
A=A-1
M=!M
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@Screen_WHILE_END7
D;JNE
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Screen.2 // push static 2
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@Screen.0 // push static 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@Screen_WHILE_EXP7
0;JMP
(Screen_WHILE_END7)
(Screen_IF_END7)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET284
D=A
@$RETURN$
0;JMP
($RET284)
(Screen.draw_small_line)// initializa local variables
@0
D=A
@R13
M=D
(Screen.draw_small_line_INIT_LOCALS_LOOP)
@Screen.draw_small_line_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Screen.draw_small_line_INIT_LOCALS_LOOP
0;JMP
(Screen.draw_small_line_INIT_LOCALS_END)
(Screen_WHILE_EXP8)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@$RET285
D=A
@$GT$
0;JMP
($RET285)
@SP
A=M
A=A-1
M=!M
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@Screen_WHILE_END8
D;JNE
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Screen.drawPixel_RETURN_173 // call Screen.drawPixel 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET286
D=A
@$FRAME$
0;JMP
($RET286)
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawPixel
0;JMP
(Screen.drawPixel_RETURN_173)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@ARG // pop argument 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@Screen_WHILE_EXP8
0;JMP
(Screen_WHILE_END8)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET287
D=A
@$RETURN$
0;JMP
($RET287)
(Screen.drawCircle)// initializa local variables
@3
D=A
@R13
M=D
(Screen.drawCircle_INIT_LOCALS_LOOP)
@Screen.drawCircle_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Screen.drawCircle_INIT_LOCALS_LOOP
0;JMP
(Screen.drawCircle_INIT_LOCALS_END)
@ARG // push argument 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=-M
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Math.multiply_RETURN_174 // call Math.multiply 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET288
D=A
@$FRAME$
0;JMP
($RET288)
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Math.multiply_RETURN_174)
@LCL // pop local 2
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(Screen_WHILE_EXP9)
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@$RET289
D=A
@$GT$
0;JMP
($RET289)
@SP
A=M
A=A-1
M=!M
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@Screen_WHILE_END9
D;JNE
@LCL // push local 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Math.multiply_RETURN_175 // call Math.multiply 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET290
D=A
@$FRAME$
0;JMP
($RET290)
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Math.multiply_RETURN_175)
@SP
AM=M-1
D=M
A=A-1
M=M-D
@Math.sqrt_RETURN_176 // call Math.sqrt 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET291
D=A
@$FRAME$
0;JMP
($RET291)
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.sqrt
0;JMP
(Math.sqrt_RETURN_176)
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@Screen.drawHorizontalLine_RETURN_177 // call Screen.drawHorizontalLine 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET292
D=A
@$FRAME$
0;JMP
($RET292)
@3
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawHorizontalLine
0;JMP
(Screen.drawHorizontalLine_RETURN_177)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@Screen_WHILE_EXP9
0;JMP
(Screen_WHILE_END9)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET293
D=A
@$RETURN$
0;JMP
($RET293)
(String.new)// initializa local variables
@0
D=A
@R13
M=D
(String.new_INIT_LOCALS_LOOP)
@String.new_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@String.new_INIT_LOCALS_LOOP
0;JMP
(String.new_INIT_LOCALS_END)
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@Memory.alloc_RETURN_178 // call Memory.alloc 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET294
D=A
@$FRAME$
0;JMP
($RET294)
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.alloc
0;JMP
(Memory.alloc_RETURN_178)
@SP // pop pointer 0
M=M-1
A=M
D=M
@R3
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS // pop this 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@THIS // pop this 2
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@THIS // push this 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Array.new_RETURN_179 // call Array.new 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET295
D=A
@$FRAME$
0;JMP
($RET295)
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.new
0;JMP
(Array.new_RETURN_179)
@THIS // pop this 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@R3 // push pointer 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@$RET296
D=A
@$RETURN$
0;JMP
($RET296)
(String.dispose)// initializa local variables
@0
D=A
@R13
M=D
(String.dispose_INIT_LOCALS_LOOP)
@String.dispose_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@String.dispose_INIT_LOCALS_LOOP
0;JMP
(String.dispose_INIT_LOCALS_END)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop pointer 0
M=M-1
A=M
D=M
@R3
M=D
@THIS // push this 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Array.dispose_RETURN_180 // call Array.dispose 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET297
D=A
@$FRAME$
0;JMP
($RET297)
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.dispose
0;JMP
(Array.dispose_RETURN_180)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@R3 // push pointer 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@Memory.deAlloc_RETURN_181 // call Memory.deAlloc 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET298
D=A
@$FRAME$
0;JMP
($RET298)
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.deAlloc
0;JMP
(Memory.deAlloc_RETURN_181)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET299
D=A
@$RETURN$
0;JMP
($RET299)
(String.length)// initializa local variables
@0
D=A
@R13
M=D
(String.length_INIT_LOCALS_LOOP)
@String.length_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@String.length_INIT_LOCALS_LOOP
0;JMP
(String.length_INIT_LOCALS_END)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop pointer 0
M=M-1
A=M
D=M
@R3
M=D
@THIS // push this 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@$RET300
D=A
@$RETURN$
0;JMP
($RET300)
(String.charAt)// initializa local variables
@0
D=A
@R13
M=D
(String.charAt_INIT_LOCALS_LOOP)
@String.charAt_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@String.charAt_INIT_LOCALS_LOOP
0;JMP
(String.charAt_INIT_LOCALS_END)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop pointer 0
M=M-1
A=M
D=M
@R3
M=D
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@$RET301
D=A
@$RETURN$
0;JMP
($RET301)
(String.setCharAt)// initializa local variables
@0
D=A
@R13
M=D
(String.setCharAt_INIT_LOCALS_LOOP)
@String.setCharAt_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@String.setCharAt_INIT_LOCALS_LOOP
0;JMP
(String.setCharAt_INIT_LOCALS_END)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop pointer 0
M=M-1
A=M
D=M
@R3
M=D
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@ARG // push argument 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET302
D=A
@$RETURN$
0;JMP
($RET302)
(String.appendChar)// initializa local variables
@0
D=A
@R13
M=D
(String.appendChar_INIT_LOCALS_LOOP)
@String.appendChar_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@String.appendChar_INIT_LOCALS_LOOP
0;JMP
(String.appendChar_INIT_LOCALS_END)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop pointer 0
M=M-1
A=M
D=M
@R3
M=D
@THIS // push this 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@THIS // push this 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@THIS // pop this 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@R3 // push pointer 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@$RET303
D=A
@$RETURN$
0;JMP
($RET303)
(String.eraseLastChar)// initializa local variables
@0
D=A
@R13
M=D
(String.eraseLastChar_INIT_LOCALS_LOOP)
@String.eraseLastChar_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@String.eraseLastChar_INIT_LOCALS_LOOP
0;JMP
(String.eraseLastChar_INIT_LOCALS_END)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop pointer 0
M=M-1
A=M
D=M
@R3
M=D
@THIS // push this 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@THIS // pop this 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@THIS // push this 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET304
D=A
@$RETURN$
0;JMP
($RET304)
(String.intValue)// initializa local variables
@4
D=A
@R13
M=D
(String.intValue_INIT_LOCALS_LOOP)
@String.intValue_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@String.intValue_INIT_LOCALS_LOOP
0;JMP
(String.intValue_INIT_LOCALS_END)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop pointer 0
M=M-1
A=M
D=M
@R3
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 2
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(String_WHILE_EXP0)
@LCL // push local 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@$RET305
D=A
@$LT$
0;JMP
($RET305)
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@String_WHILE_END0
D;JNE
@LCL // push local 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@LCL // pop local 3
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@45 // push constant 45
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET306
D=A
@$EQ$
0;JMP
($RET306)
@SP
AM=M-1
D=M
M=0
@String_IF_TRUE0
D;JNE
@String_IF_FALSE0
0;JMP
(String_IF_TRUE0)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=!M
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@String_IF_END0
0;JMP
(String_IF_FALSE0)
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@10 // push constant 10
D=A
@SP
A=M
M=D
@SP
M=M+1
@Math.multiply_RETURN_182 // call Math.multiply 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET307
D=A
@$FRAME$
0;JMP
($RET307)
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Math.multiply_RETURN_182)
@LCL // push local 3
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(String_IF_END0)
@LCL // push local 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 2
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@String_WHILE_EXP0
0;JMP
(String_WHILE_END0)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
M=0
@String_IF_TRUE1
D;JNE
@String_IF_FALSE1
0;JMP
(String_IF_TRUE1)
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=-M
@$RET308
D=A
@$RETURN$
0;JMP
($RET308)
(String_IF_FALSE1)
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@$RET309
D=A
@$RETURN$
0;JMP
($RET309)
(String.setInt)// initializa local variables
@2
D=A
@R13
M=D
(String.setInt_INIT_LOCALS_LOOP)
@String.setInt_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@String.setInt_INIT_LOCALS_LOOP
0;JMP
(String.setInt_INIT_LOCALS_END)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop pointer 0
M=M-1
A=M
D=M
@R3
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS // pop this 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET310
D=A
@$LT$
0;JMP
($RET310)
@SP
AM=M-1
D=M
M=0
@String_IF_TRUE2
D;JNE
@String_IF_FALSE2
0;JMP
(String_IF_TRUE2)
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=-M
@ARG // pop argument 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@R3 // push pointer 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@45 // push constant 45
D=A
@SP
A=M
M=D
@SP
M=M+1
@String.appendChar_RETURN_183 // call String.appendChar 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET311
D=A
@$FRAME$
0;JMP
($RET311)
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(String.appendChar_RETURN_183)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
(String_IF_FALSE2)
(String_WHILE_EXP1)
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET312
D=A
@$GT$
0;JMP
($RET312)
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@String_WHILE_END1
D;JNE
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(String_WHILE_EXP2)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@9 // push constant 9
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET313
D=A
@$GT$
0;JMP
($RET313)
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@String_WHILE_END2
D;JNE
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@10 // push constant 10
D=A
@SP
A=M
M=D
@SP
M=M+1
@Math.divide_RETURN_184 // call Math.divide 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET314
D=A
@$FRAME$
0;JMP
($RET314)
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(Math.divide_RETURN_184)
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@10 // push constant 10
D=A
@SP
A=M
M=D
@SP
M=M+1
@Math.multiply_RETURN_185 // call Math.multiply 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET315
D=A
@$FRAME$
0;JMP
($RET315)
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Math.multiply_RETURN_185)
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@String_WHILE_EXP2
0;JMP
(String_WHILE_END2)
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Math.multiply_RETURN_186 // call Math.multiply 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET316
D=A
@$FRAME$
0;JMP
($RET316)
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Math.multiply_RETURN_186)
@SP
AM=M-1
D=M
A=A-1
M=M-D
@ARG // pop argument 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@R3 // push pointer 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@String.appendChar_RETURN_187 // call String.appendChar 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET317
D=A
@$FRAME$
0;JMP
($RET317)
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(String.appendChar_RETURN_187)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@String_WHILE_EXP1
0;JMP
(String_WHILE_END1)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET318
D=A
@$RETURN$
0;JMP
($RET318)
(String.newLine)// initializa local variables
@0
D=A
@R13
M=D
(String.newLine_INIT_LOCALS_LOOP)
@String.newLine_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@String.newLine_INIT_LOCALS_LOOP
0;JMP
(String.newLine_INIT_LOCALS_END)
@128 // push constant 128
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET319
D=A
@$RETURN$
0;JMP
($RET319)
(String.backSpace)// initializa local variables
@0
D=A
@R13
M=D
(String.backSpace_INIT_LOCALS_LOOP)
@String.backSpace_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@String.backSpace_INIT_LOCALS_LOOP
0;JMP
(String.backSpace_INIT_LOCALS_END)
@129 // push constant 129
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET320
D=A
@$RETURN$
0;JMP
($RET320)
(String.doubleQuote)// initializa local variables
@0
D=A
@R13
M=D
(String.doubleQuote_INIT_LOCALS_LOOP)
@String.doubleQuote_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@String.doubleQuote_INIT_LOCALS_LOOP
0;JMP
(String.doubleQuote_INIT_LOCALS_END)
@34 // push constant 34
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET321
D=A
@$RETURN$
0;JMP
($RET321)
(Sys.init)// initializa local variables
@0
D=A
@R13
M=D
(Sys.init_INIT_LOCALS_LOOP)
@Sys.init_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Sys.init_INIT_LOCALS_LOOP
0;JMP
(Sys.init_INIT_LOCALS_END)
@Memory.init_RETURN_188 // call Memory.init 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET322
D=A
@$FRAME$
0;JMP
($RET322)
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.init
0;JMP
(Memory.init_RETURN_188)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@Math.init_RETURN_189 // call Math.init 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET323
D=A
@$FRAME$
0;JMP
($RET323)
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.init
0;JMP
(Math.init_RETURN_189)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@Output.init_RETURN_190 // call Output.init 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET324
D=A
@$FRAME$
0;JMP
($RET324)
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.init
0;JMP
(Output.init_RETURN_190)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@Screen.init_RETURN_191 // call Screen.init 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET325
D=A
@$FRAME$
0;JMP
($RET325)
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.init
0;JMP
(Screen.init_RETURN_191)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@Keyboard.init_RETURN_192 // call Keyboard.init 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET326
D=A
@$FRAME$
0;JMP
($RET326)
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Keyboard.init
0;JMP
(Keyboard.init_RETURN_192)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@Main.main_RETURN_193 // call Main.main 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET327
D=A
@$FRAME$
0;JMP
($RET327)
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.main
0;JMP
(Main.main_RETURN_193)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET328
D=A
@$RETURN$
0;JMP
($RET328)
(Sys.halt)// initializa local variables
@0
D=A
@R13
M=D
(Sys.halt_INIT_LOCALS_LOOP)
@Sys.halt_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Sys.halt_INIT_LOCALS_LOOP
0;JMP
(Sys.halt_INIT_LOCALS_END)
(Sys_WHILE_EXP0)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=!M
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@Sys_WHILE_END0
D;JNE
@Sys_WHILE_EXP0
0;JMP
(Sys_WHILE_END0)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET329
D=A
@$RETURN$
0;JMP
($RET329)
(Sys.wait)// initializa local variables
@2
D=A
@R13
M=D
(Sys.wait_INIT_LOCALS_LOOP)
@Sys.wait_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Sys.wait_INIT_LOCALS_LOOP
0;JMP
(Sys.wait_INIT_LOCALS_END)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(Sys_WHILE_EXP1)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@$RET330
D=A
@$LT$
0;JMP
($RET330)
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@Sys_WHILE_END1
D;JNE
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(Sys_WHILE_EXP2)
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@200 // push constant 200
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET331
D=A
@$LT$
0;JMP
($RET331)
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@Sys_WHILE_END2
D;JNE
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@Sys_WHILE_EXP2
0;JMP
(Sys_WHILE_END2)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@Sys_WHILE_EXP1
0;JMP
(Sys_WHILE_END1)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET332
D=A
@$RETURN$
0;JMP
($RET332)
(Sys.error)// initializa local variables
@0
D=A
@R13
M=D
(Sys.error_INIT_LOCALS_LOOP)
@Sys.error_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Sys.error_INIT_LOCALS_LOOP
0;JMP
(Sys.error_INIT_LOCALS_END)
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@String.new_RETURN_194 // call String.new 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET333
D=A
@$FRAME$
0;JMP
($RET333)
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.new
0;JMP
(String.new_RETURN_194)
@69 // push constant 69
D=A
@SP
A=M
M=D
@SP
M=M+1
@String.appendChar_RETURN_195 // call String.appendChar 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET334
D=A
@$FRAME$
0;JMP
($RET334)
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(String.appendChar_RETURN_195)
@114 // push constant 114
D=A
@SP
A=M
M=D
@SP
M=M+1
@String.appendChar_RETURN_196 // call String.appendChar 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET335
D=A
@$FRAME$
0;JMP
($RET335)
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(String.appendChar_RETURN_196)
@114 // push constant 114
D=A
@SP
A=M
M=D
@SP
M=M+1
@String.appendChar_RETURN_197 // call String.appendChar 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET336
D=A
@$FRAME$
0;JMP
($RET336)
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(String.appendChar_RETURN_197)
@Output.printString_RETURN_198 // call Output.printString 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET337
D=A
@$FRAME$
0;JMP
($RET337)
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printString
0;JMP
(Output.printString_RETURN_198)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Output.printInt_RETURN_199 // call Output.printInt 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET338
D=A
@$FRAME$
0;JMP
($RET338)
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printInt
0;JMP
(Output.printInt_RETURN_199)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@Sys.halt_RETURN_200 // call Sys.halt 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET339
D=A
@$FRAME$
0;JMP
($RET339)
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.halt
0;JMP
(Sys.halt_RETURN_200)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@$RET340
D=A
@$RETURN$
0;JMP
($RET340)
