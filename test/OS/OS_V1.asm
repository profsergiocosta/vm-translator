@256
D=A
@SP
M=D
@Sys.init_RETURN_0 // call Sys.init 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
(Sys.init_RETURN_0)
(Array.new)// initializa local variables
@0
D=A
@R13
M=D
(Array.new_INIT_LOCALS_LOOP)
@Array.new_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Array.new_INIT_LOCALS_LOOP
0;JMP
(Array.new_INIT_LOCALS_END)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // gt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JGT_TRUE_Array_0
D;JGT
D=0
@JGT_FALSE_Array_0
0;JMP
(JGT_TRUE_Array_0)
D=-1
(JGT_FALSE_Array_0)
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@IF_TRUE0
D;JNE
@IF_FALSE0
0;JMP
(IF_TRUE0)
@2 // push constant 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@Sys.error_RETURN_1 // call Sys.error 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(Sys.error_RETURN_1)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
(IF_FALSE0)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Memory.alloc_RETURN_2 // call Memory.alloc 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.alloc
0;JMP
(Memory.alloc_RETURN_2)
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(Array.dispose)// initializa local variables
@0
D=A
@R13
M=D
(Array.dispose_INIT_LOCALS_LOOP)
@Array.dispose_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Array.dispose_INIT_LOCALS_LOOP
0;JMP
(Array.dispose_INIT_LOCALS_END)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop pointer 0
M=M-1
A=M
D=M
@R3
M=D
@R3 // push pointer 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@Memory.deAlloc_RETURN_3 // call Memory.deAlloc 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.deAlloc
0;JMP
(Memory.deAlloc_RETURN_3)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(Keyboard.init)// initializa local variables
@0
D=A
@R13
M=D
(Keyboard.init_INIT_LOCALS_LOOP)
@Keyboard.init_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Keyboard.init_INIT_LOCALS_LOOP
0;JMP
(Keyboard.init_INIT_LOCALS_END)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(Keyboard.keyPressed)// initializa local variables
@0
D=A
@R13
M=D
(Keyboard.keyPressed_INIT_LOCALS_LOOP)
@Keyboard.keyPressed_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Keyboard.keyPressed_INIT_LOCALS_LOOP
0;JMP
(Keyboard.keyPressed_INIT_LOCALS_END)
@24576 // push constant 24576
D=A
@SP
A=M
M=D
@SP
M=M+1
@Memory.peek_RETURN_4 // call Memory.peek 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.peek
0;JMP
(Memory.peek_RETURN_4)
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(Keyboard.readChar)// initializa local variables
@2
D=A
@R13
M=D
(Keyboard.readChar_INIT_LOCALS_LOOP)
@Keyboard.readChar_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Keyboard.readChar_INIT_LOCALS_LOOP
0;JMP
(Keyboard.readChar_INIT_LOCALS_END)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.printChar_RETURN_5 // call Output.printChar 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printChar
0;JMP
(Output.printChar_RETURN_5)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
(WHILE_EXP0)
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // eq
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JEQ_Keyboard_1
D;JEQ
D=1
(JEQ_Keyboard_1)
D=D-1
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // gt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JGT_TRUE_Keyboard_2
D;JGT
D=0
@JGT_FALSE_Keyboard_2
0;JMP
(JGT_TRUE_Keyboard_2)
D=-1
(JGT_FALSE_Keyboard_2)
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D|M
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@WHILE_END0
D;JNE
@Keyboard.keyPressed_RETURN_6 // call Keyboard.keyPressed 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Keyboard.keyPressed
0;JMP
(Keyboard.keyPressed_RETURN_6)
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // gt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JGT_TRUE_Keyboard_3
D;JGT
D=0
@JGT_FALSE_Keyboard_3
0;JMP
(JGT_TRUE_Keyboard_3)
D=-1
(JGT_FALSE_Keyboard_3)
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
M=0
@IF_TRUE0
D;JNE
@IF_FALSE0
0;JMP
(IF_TRUE0)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(IF_FALSE0)
@WHILE_EXP0
0;JMP
(WHILE_END0)
@String.backSpace_RETURN_7 // call String.backSpace 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.backSpace
0;JMP
(String.backSpace_RETURN_7)
@Output.printChar_RETURN_8 // call Output.printChar 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printChar
0;JMP
(Output.printChar_RETURN_8)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Output.printChar_RETURN_9 // call Output.printChar 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printChar
0;JMP
(Output.printChar_RETURN_9)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(Keyboard.readLine)// initializa local variables
@5
D=A
@R13
M=D
(Keyboard.readLine_INIT_LOCALS_LOOP)
@Keyboard.readLine_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Keyboard.readLine_INIT_LOCALS_LOOP
0;JMP
(Keyboard.readLine_INIT_LOCALS_END)
@80 // push constant 80
D=A
@SP
A=M
M=D
@SP
M=M+1
@String.new_RETURN_10 // call String.new 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.new
0;JMP
(String.new_RETURN_10)
@LCL // pop local 3
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Output.printString_RETURN_11 // call Output.printString 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printString
0;JMP
(Output.printString_RETURN_11)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@String.newLine_RETURN_12 // call String.newLine 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.newLine
0;JMP
(String.newLine_RETURN_12)
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@String.backSpace_RETURN_13 // call String.backSpace 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.backSpace
0;JMP
(String.backSpace_RETURN_13)
@LCL // pop local 2
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(WHILE_EXP0)
@LCL // push local 4
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=!M
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@WHILE_END0
D;JNE
@Keyboard.readChar_RETURN_14 // call Keyboard.readChar 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Keyboard.readChar
0;JMP
(Keyboard.readChar_RETURN_14)
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // eq
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JEQ_Keyboard_4
D;JEQ
D=1
(JEQ_Keyboard_4)
D=D-1
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 4
D=M
@4
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 4
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@IF_TRUE0
D;JNE
@IF_FALSE0
0;JMP
(IF_TRUE0)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // eq
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JEQ_Keyboard_5
D;JEQ
D=1
(JEQ_Keyboard_5)
D=D-1
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
M=0
@IF_TRUE1
D;JNE
@IF_FALSE1
0;JMP
(IF_TRUE1)
@LCL // push local 3
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@String.eraseLastChar_RETURN_15 // call String.eraseLastChar 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.eraseLastChar
0;JMP
(String.eraseLastChar_RETURN_15)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@IF_END1
0;JMP
(IF_FALSE1)
@LCL // push local 3
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@String.appendChar_RETURN_16 // call String.appendChar 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(String.appendChar_RETURN_16)
@LCL // pop local 3
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(IF_END1)
(IF_FALSE0)
@WHILE_EXP0
0;JMP
(WHILE_END0)
@LCL // push local 3
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(Keyboard.readInt)// initializa local variables
@2
D=A
@R13
M=D
(Keyboard.readInt_INIT_LOCALS_LOOP)
@Keyboard.readInt_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Keyboard.readInt_INIT_LOCALS_LOOP
0;JMP
(Keyboard.readInt_INIT_LOCALS_END)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Keyboard.readLine_RETURN_17 // call Keyboard.readLine 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Keyboard.readLine
0;JMP
(Keyboard.readLine_RETURN_17)
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@String.intValue_RETURN_18 // call String.intValue 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.intValue
0;JMP
(String.intValue_RETURN_18)
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@String.dispose_RETURN_19 // call String.dispose 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.dispose
0;JMP
(String.dispose_RETURN_19)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(Math.init)// initializa local variables
@1
D=A
@R13
M=D
(Math.init_INIT_LOCALS_LOOP)
@Math.init_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Math.init_INIT_LOCALS_LOOP
0;JMP
(Math.init_INIT_LOCALS_END)
@16 // push constant 16
D=A
@SP
A=M
M=D
@SP
M=M+1
@Array.new_RETURN_20 // call Array.new 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.new
0;JMP
(Array.new_RETURN_20)
@SP // pop static 1
M=M-1
A=M
D=M
@Math.1
M=D
@16 // push constant 16
D=A
@SP
A=M
M=D
@SP
M=M+1
@Array.new_RETURN_21 // call Array.new 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.new
0;JMP
(Array.new_RETURN_21)
@SP // pop static 0
M=M-1
A=M
D=M
@Math.0
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Math.0 // push static 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(WHILE_EXP0)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@15 // push constant 15
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // lt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JLT_TRUE_Math_6
D;JLT
D=0
@JLT_FALSE_Math_6
0;JMP
(JLT_TRUE_Math_6)
D=-1
(JLT_FALSE_Math_6)
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@WHILE_END0
D;JNE
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Math.0 // push static 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@Math.0 // push static 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@Math.0 // push static 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@WHILE_EXP0
0;JMP
(WHILE_END0)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(Math.abs)// initializa local variables
@0
D=A
@R13
M=D
(Math.abs_INIT_LOCALS_LOOP)
@Math.abs_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Math.abs_INIT_LOCALS_LOOP
0;JMP
(Math.abs_INIT_LOCALS_END)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // lt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JLT_TRUE_Math_7
D;JLT
D=0
@JLT_FALSE_Math_7
0;JMP
(JLT_TRUE_Math_7)
D=-1
(JLT_FALSE_Math_7)
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
M=0
@IF_TRUE0
D;JNE
@IF_FALSE0
0;JMP
(IF_TRUE0)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=-M
@ARG // pop argument 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(IF_FALSE0)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(Math.multiply)// initializa local variables
@5
D=A
@R13
M=D
(Math.multiply_INIT_LOCALS_LOOP)
@Math.multiply_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Math.multiply_INIT_LOCALS_LOOP
0;JMP
(Math.multiply_INIT_LOCALS_END)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // lt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JLT_TRUE_Math_8
D;JLT
D=0
@JLT_FALSE_Math_8
0;JMP
(JLT_TRUE_Math_8)
D=-1
(JLT_FALSE_Math_8)
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // gt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JGT_TRUE_Math_9
D;JGT
D=0
@JGT_FALSE_Math_9
0;JMP
(JGT_TRUE_Math_9)
D=-1
(JGT_FALSE_Math_9)
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D&M
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // gt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JGT_TRUE_Math_10
D;JGT
D=0
@JGT_FALSE_Math_10
0;JMP
(JGT_TRUE_Math_10)
D=-1
(JGT_FALSE_Math_10)
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // lt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JLT_TRUE_Math_11
D;JLT
D=0
@JLT_FALSE_Math_11
0;JMP
(JLT_TRUE_Math_11)
D=-1
(JLT_FALSE_Math_11)
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D&M
@SP
AM=M-1
D=M
A=A-1
M=D|M
@LCL // pop local 4
D=M
@4
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Math.abs_RETURN_22 // call Math.abs 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.abs
0;JMP
(Math.abs_RETURN_22)
@ARG // pop argument 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Math.abs_RETURN_23 // call Math.abs 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.abs
0;JMP
(Math.abs_RETURN_23)
@ARG // pop argument 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // lt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JLT_TRUE_Math_12
D;JLT
D=0
@JLT_FALSE_Math_12
0;JMP
(JLT_TRUE_Math_12)
D=-1
(JLT_FALSE_Math_12)
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
M=0
@IF_TRUE0
D;JNE
@IF_FALSE0
0;JMP
(IF_TRUE0)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // pop argument 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // pop argument 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(IF_FALSE0)
(WHILE_EXP0)
@LCL // push local 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP // lt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JLT_TRUE_Math_13
D;JLT
D=0
@JLT_FALSE_Math_13
0;JMP
(JLT_TRUE_Math_13)
D=-1
(JLT_FALSE_Math_13)
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@WHILE_END0
D;JNE
@LCL // push local 3
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Math.0 // push static 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D&M
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // eq
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JEQ_Math_14
D;JEQ
D=1
(JEQ_Math_14)
D=D-1
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@IF_TRUE1
D;JNE
@IF_FALSE1
0;JMP
(IF_TRUE1)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 3
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Math.0 // push static 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 2
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(IF_FALSE1)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@ARG // pop argument 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 3
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 3
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@WHILE_EXP0
0;JMP
(WHILE_END0)
@LCL // push local 4
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
M=0
@IF_TRUE2
D;JNE
@IF_FALSE2
0;JMP
(IF_TRUE2)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=-M
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(IF_FALSE2)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(Math.divide)// initializa local variables
@4
D=A
@R13
M=D
(Math.divide_INIT_LOCALS_LOOP)
@Math.divide_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Math.divide_INIT_LOCALS_LOOP
0;JMP
(Math.divide_INIT_LOCALS_END)
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // eq
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JEQ_Math_15
D;JEQ
D=1
(JEQ_Math_15)
D=D-1
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
M=0
@IF_TRUE0
D;JNE
@IF_FALSE0
0;JMP
(IF_TRUE0)
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@Sys.error_RETURN_24 // call Sys.error 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(Sys.error_RETURN_24)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
(IF_FALSE0)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // lt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JLT_TRUE_Math_16
D;JLT
D=0
@JLT_FALSE_Math_16
0;JMP
(JLT_TRUE_Math_16)
D=-1
(JLT_FALSE_Math_16)
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // gt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JGT_TRUE_Math_17
D;JGT
D=0
@JGT_FALSE_Math_17
0;JMP
(JGT_TRUE_Math_17)
D=-1
(JGT_FALSE_Math_17)
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D&M
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // gt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JGT_TRUE_Math_18
D;JGT
D=0
@JGT_FALSE_Math_18
0;JMP
(JGT_TRUE_Math_18)
D=-1
(JGT_FALSE_Math_18)
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // lt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JLT_TRUE_Math_19
D;JLT
D=0
@JLT_FALSE_Math_19
0;JMP
(JLT_TRUE_Math_19)
D=-1
(JLT_FALSE_Math_19)
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D&M
@SP
AM=M-1
D=M
A=A-1
M=D|M
@LCL // pop local 2
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Math.1 // push static 1
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Math.abs_RETURN_25 // call Math.abs 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.abs
0;JMP
(Math.abs_RETURN_25)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Math.abs_RETURN_26 // call Math.abs 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.abs
0;JMP
(Math.abs_RETURN_26)
@ARG // pop argument 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(WHILE_EXP0)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@15 // push constant 15
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // lt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JLT_TRUE_Math_20
D;JLT
D=0
@JLT_FALSE_Math_20
0;JMP
(JLT_TRUE_Math_20)
D=-1
(JLT_FALSE_Math_20)
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 3
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
A=A-1
M=D&M
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@WHILE_END0
D;JNE
@32767 // push constant 32767
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Math.1 // push static 1
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Math.1 // push static 1
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP // lt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JLT_TRUE_Math_21
D;JLT
D=0
@JLT_FALSE_Math_21
0;JMP
(JLT_TRUE_Math_21)
D=-1
(JLT_FALSE_Math_21)
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 3
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 3
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@IF_TRUE1
D;JNE
@IF_FALSE1
0;JMP
(IF_TRUE1)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@Math.1 // push static 1
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Math.1 // push static 1
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Math.1 // push static 1
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@Math.1 // push static 1
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP // gt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JGT_TRUE_Math_22
D;JGT
D=0
@JGT_FALSE_Math_22
0;JMP
(JGT_TRUE_Math_22)
D=-1
(JGT_FALSE_Math_22)
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 3
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 3
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@IF_TRUE2
D;JNE
@IF_FALSE2
0;JMP
(IF_TRUE2)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(IF_FALSE2)
(IF_FALSE1)
@WHILE_EXP0
0;JMP
(WHILE_END0)
(WHILE_EXP1)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=-M
@SP // gt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JGT_TRUE_Math_23
D;JGT
D=0
@JGT_FALSE_Math_23
0;JMP
(JGT_TRUE_Math_23)
D=-1
(JGT_FALSE_Math_23)
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@WHILE_END1
D;JNE
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Math.1 // push static 1
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP // gt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JGT_TRUE_Math_24
D;JGT
D=0
@JGT_FALSE_Math_24
0;JMP
(JGT_TRUE_Math_24)
D=-1
(JGT_FALSE_Math_24)
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@IF_TRUE3
D;JNE
@IF_FALSE3
0;JMP
(IF_TRUE3)
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Math.0 // push static 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Math.1 // push static 1
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@ARG // pop argument 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(IF_FALSE3)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@WHILE_EXP1
0;JMP
(WHILE_END1)
@LCL // push local 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
M=0
@IF_TRUE4
D;JNE
@IF_FALSE4
0;JMP
(IF_TRUE4)
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=-M
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(IF_FALSE4)
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(Math.sqrt)// initializa local variables
@4
D=A
@R13
M=D
(Math.sqrt_INIT_LOCALS_LOOP)
@Math.sqrt_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Math.sqrt_INIT_LOCALS_LOOP
0;JMP
(Math.sqrt_INIT_LOCALS_END)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // lt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JLT_TRUE_Math_25
D;JLT
D=0
@JLT_FALSE_Math_25
0;JMP
(JLT_TRUE_Math_25)
D=-1
(JLT_FALSE_Math_25)
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
M=0
@IF_TRUE0
D;JNE
@IF_FALSE0
0;JMP
(IF_TRUE0)
@4 // push constant 4
D=A
@SP
A=M
M=D
@SP
M=M+1
@Sys.error_RETURN_27 // call Sys.error 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(Sys.error_RETURN_27)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
(IF_FALSE0)
@7 // push constant 7
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(WHILE_EXP0)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=-M
@SP // gt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JGT_TRUE_Math_26
D;JGT
D=0
@JGT_FALSE_Math_26
0;JMP
(JGT_TRUE_Math_26)
D=-1
(JGT_FALSE_Math_26)
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@WHILE_END0
D;JNE
@LCL // push local 3
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Math.0 // push static 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Math.multiply_RETURN_28 // call Math.multiply 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Math.multiply_RETURN_28)
@LCL // pop local 2
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // gt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JGT_TRUE_Math_27
D;JGT
D=0
@JGT_FALSE_Math_27
0;JMP
(JGT_TRUE_Math_27)
D=-1
(JGT_FALSE_Math_27)
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=!M
@LCL // push local 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // lt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JLT_TRUE_Math_28
D;JLT
D=0
@JLT_FALSE_Math_28
0;JMP
(JLT_TRUE_Math_28)
D=-1
(JLT_FALSE_Math_28)
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
A=A-1
M=D&M
@SP
AM=M-1
D=M
M=0
@IF_TRUE1
D;JNE
@IF_FALSE1
0;JMP
(IF_TRUE1)
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 3
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(IF_FALSE1)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@WHILE_EXP0
0;JMP
(WHILE_END0)
@LCL // push local 3
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(Math.max)// initializa local variables
@0
D=A
@R13
M=D
(Math.max_INIT_LOCALS_LOOP)
@Math.max_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Math.max_INIT_LOCALS_LOOP
0;JMP
(Math.max_INIT_LOCALS_END)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // gt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JGT_TRUE_Math_29
D;JGT
D=0
@JGT_FALSE_Math_29
0;JMP
(JGT_TRUE_Math_29)
D=-1
(JGT_FALSE_Math_29)
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
M=0
@IF_TRUE0
D;JNE
@IF_FALSE0
0;JMP
(IF_TRUE0)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // pop argument 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(IF_FALSE0)
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(Math.min)// initializa local variables
@0
D=A
@R13
M=D
(Math.min_INIT_LOCALS_LOOP)
@Math.min_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Math.min_INIT_LOCALS_LOOP
0;JMP
(Math.min_INIT_LOCALS_END)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // lt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JLT_TRUE_Math_30
D;JLT
D=0
@JLT_FALSE_Math_30
0;JMP
(JLT_TRUE_Math_30)
D=-1
(JLT_FALSE_Math_30)
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
M=0
@IF_TRUE0
D;JNE
@IF_FALSE0
0;JMP
(IF_TRUE0)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // pop argument 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(IF_FALSE0)
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(Memory.init)// initializa local variables
@0
D=A
@R13
M=D
(Memory.init_INIT_LOCALS_LOOP)
@Memory.init_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Memory.init_INIT_LOCALS_LOOP
0;JMP
(Memory.init_INIT_LOCALS_END)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // pop static 0
M=M-1
A=M
D=M
@Memory.0
M=D
@2048 // push constant 2048
D=A
@SP
A=M
M=D
@SP
M=M+1
@Memory.0 // push static 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@14334 // push constant 14334
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@2049 // push constant 2049
D=A
@SP
A=M
M=D
@SP
M=M+1
@Memory.0 // push static 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@2050 // push constant 2050
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(Memory.peek)// initializa local variables
@0
D=A
@R13
M=D
(Memory.peek_INIT_LOCALS_LOOP)
@Memory.peek_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Memory.peek_INIT_LOCALS_LOOP
0;JMP
(Memory.peek_INIT_LOCALS_END)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Memory.0 // push static 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(Memory.poke)// initializa local variables
@0
D=A
@R13
M=D
(Memory.poke_INIT_LOCALS_LOOP)
@Memory.poke_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Memory.poke_INIT_LOCALS_LOOP
0;JMP
(Memory.poke_INIT_LOCALS_END)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Memory.0 // push static 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(Memory.alloc)// initializa local variables
@1
D=A
@R13
M=D
(Memory.alloc_INIT_LOCALS_LOOP)
@Memory.alloc_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Memory.alloc_INIT_LOCALS_LOOP
0;JMP
(Memory.alloc_INIT_LOCALS_END)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // lt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JLT_TRUE_Memory_31
D;JLT
D=0
@JLT_FALSE_Memory_31
0;JMP
(JLT_TRUE_Memory_31)
D=-1
(JLT_FALSE_Memory_31)
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
M=0
@IF_TRUE0
D;JNE
@IF_FALSE0
0;JMP
(IF_TRUE0)
@5 // push constant 5
D=A
@SP
A=M
M=D
@SP
M=M+1
@Sys.error_RETURN_29 // call Sys.error 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(Sys.error_RETURN_29)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
(IF_FALSE0)
@2048 // push constant 2048
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(WHILE_EXP0)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // lt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JLT_TRUE_Memory_32
D;JLT
D=0
@JLT_FALSE_Memory_32
0;JMP
(JLT_TRUE_Memory_32)
D=-1
(JLT_FALSE_Memory_32)
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@WHILE_END0
D;JNE
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@WHILE_EXP0
0;JMP
(WHILE_END0)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@16379 // push constant 16379
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // gt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JGT_TRUE_Memory_33
D;JGT
D=0
@JGT_FALSE_Memory_33
0;JMP
(JGT_TRUE_Memory_33)
D=-1
(JGT_FALSE_Memory_33)
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
M=0
@IF_TRUE1
D;JNE
@IF_FALSE1
0;JMP
(IF_TRUE1)
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@Sys.error_RETURN_30 // call Sys.error 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(Sys.error_RETURN_30)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
(IF_FALSE1)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2 // push constant 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // gt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JGT_TRUE_Memory_34
D;JGT
D=0
@JGT_FALSE_Memory_34
0;JMP
(JGT_TRUE_Memory_34)
D=-1
(JGT_FALSE_Memory_34)
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
M=0
@IF_TRUE2
D;JNE
@IF_FALSE2
0;JMP
(IF_TRUE2)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2 // push constant 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2 // push constant 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2 // push constant 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // eq
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JEQ_Memory_35
D;JEQ
D=1
(JEQ_Memory_35)
D=D-1
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
M=0
@IF_TRUE3
D;JNE
@IF_FALSE3
0;JMP
(IF_TRUE3)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@4 // push constant 4
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@IF_END3
0;JMP
(IF_FALSE3)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(IF_END3)
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@2 // push constant 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(IF_FALSE2)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2 // push constant 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(Memory.deAlloc)// initializa local variables
@2
D=A
@R13
M=D
(Memory.deAlloc_INIT_LOCALS_LOOP)
@Memory.deAlloc_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Memory.deAlloc_INIT_LOCALS_LOOP
0;JMP
(Memory.deAlloc_INIT_LOCALS_END)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2 // push constant 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // eq
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JEQ_Memory_36
D;JEQ
D=1
(JEQ_Memory_36)
D=D-1
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
M=0
@IF_TRUE0
D;JNE
@IF_FALSE0
0;JMP
(IF_TRUE0)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@2 // push constant 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@IF_END0
0;JMP
(IF_FALSE0)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2 // push constant 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // eq
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JEQ_Memory_37
D;JEQ
D=1
(JEQ_Memory_37)
D=D-1
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
M=0
@IF_TRUE1
D;JNE
@IF_FALSE1
0;JMP
(IF_TRUE1)
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2 // push constant 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@IF_END1
0;JMP
(IF_FALSE1)
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(IF_END1)
(IF_END0)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(Output.init)// initializa local variables
@0
D=A
@R13
M=D
(Output.init_INIT_LOCALS_LOOP)
@Output.init_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Output.init_INIT_LOCALS_LOOP
0;JMP
(Output.init_INIT_LOCALS_END)
@16384 // push constant 16384
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // pop static 4
M=M-1
A=M
D=M
@Output.4
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=!M
@SP // pop static 2
M=M-1
A=M
D=M
@Output.2
M=D
@32 // push constant 32
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // pop static 1
M=M-1
A=M
D=M
@Output.1
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // pop static 0
M=M-1
A=M
D=M
@Output.0
M=D
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@String.new_RETURN_31 // call String.new 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.new
0;JMP
(String.new_RETURN_31)
@SP // pop static 3
M=M-1
A=M
D=M
@Output.3
M=D
@Output.initMap_RETURN_32 // call Output.initMap 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.initMap
0;JMP
(Output.initMap_RETURN_32)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@Output.createShiftedMap_RETURN_33 // call Output.createShiftedMap 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.createShiftedMap
0;JMP
(Output.createShiftedMap_RETURN_33)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(Output.initMap)// initializa local variables
@0
D=A
@R13
M=D
(Output.initMap_INIT_LOCALS_LOOP)
@Output.initMap_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Output.initMap_INIT_LOCALS_LOOP
0;JMP
(Output.initMap_INIT_LOCALS_END)
@127 // push constant 127
D=A
@SP
A=M
M=D
@SP
M=M+1
@Array.new_RETURN_34 // call Array.new 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.new
0;JMP
(Array.new_RETURN_34)
@SP // pop static 5
M=M-1
A=M
D=M
@Output.5
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_35 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_35)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@32 // push constant 32
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_36 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_36)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@33 // push constant 33
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_37 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_37)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@34 // push constant 34
D=A
@SP
A=M
M=D
@SP
M=M+1
@54 // push constant 54
D=A
@SP
A=M
M=D
@SP
M=M+1
@54 // push constant 54
D=A
@SP
A=M
M=D
@SP
M=M+1
@20 // push constant 20
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_38 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_38)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@35 // push constant 35
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@18 // push constant 18
D=A
@SP
A=M
M=D
@SP
M=M+1
@18 // push constant 18
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@18 // push constant 18
D=A
@SP
A=M
M=D
@SP
M=M+1
@18 // push constant 18
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@18 // push constant 18
D=A
@SP
A=M
M=D
@SP
M=M+1
@18 // push constant 18
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_39 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_39)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@36 // push constant 36
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_40 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_40)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@37 // push constant 37
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@35 // push constant 35
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@49 // push constant 49
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_41 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_41)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@38 // push constant 38
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@54 // push constant 54
D=A
@SP
A=M
M=D
@SP
M=M+1
@27 // push constant 27
D=A
@SP
A=M
M=D
@SP
M=M+1
@27 // push constant 27
D=A
@SP
A=M
M=D
@SP
M=M+1
@27 // push constant 27
D=A
@SP
A=M
M=D
@SP
M=M+1
@54 // push constant 54
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_42 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_42)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@39 // push constant 39
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_43 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_43)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@40 // push constant 40
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_44 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_44)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@41 // push constant 41
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_45 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_45)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@42 // push constant 42
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_46 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_46)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@43 // push constant 43
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_47 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_47)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@44 // push constant 44
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_48 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_48)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@45 // push constant 45
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_49 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_49)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@46 // push constant 46
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_50 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_50)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@47 // push constant 47
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@32 // push constant 32
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_51 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_51)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_52 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_52)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@49 // push constant 49
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@14 // push constant 14
D=A
@SP
A=M
M=D
@SP
M=M+1
@15 // push constant 15
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_53 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_53)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@50 // push constant 50
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_54 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_54)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@28 // push constant 28
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_55 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_55)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@52 // push constant 52
D=A
@SP
A=M
M=D
@SP
M=M+1
@16 // push constant 16
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@28 // push constant 28
D=A
@SP
A=M
M=D
@SP
M=M+1
@26 // push constant 26
D=A
@SP
A=M
M=D
@SP
M=M+1
@25 // push constant 25
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@60 // push constant 60
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_56 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_56)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@53 // push constant 53
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@31 // push constant 31
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_57 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_57)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@54 // push constant 54
D=A
@SP
A=M
M=D
@SP
M=M+1
@28 // push constant 28
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@31 // push constant 31
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_58 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_58)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@55 // push constant 55
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@49 // push constant 49
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_59 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_59)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@56 // push constant 56
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_60 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_60)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@57 // push constant 57
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@62 // push constant 62
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@14 // push constant 14
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_61 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_61)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@58 // push constant 58
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_62 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_62)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@59 // push constant 59
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_63 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_63)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@60 // push constant 60
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_64 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_64)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@61 // push constant 61
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_65 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_65)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@62 // push constant 62
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_66 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_66)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@64 // push constant 64
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@59 // push constant 59
D=A
@SP
A=M
M=D
@SP
M=M+1
@59 // push constant 59
D=A
@SP
A=M
M=D
@SP
M=M+1
@59 // push constant 59
D=A
@SP
A=M
M=D
@SP
M=M+1
@27 // push constant 27
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_67 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_67)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_68 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_68)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@65 // push constant 65
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_69 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_69)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@66 // push constant 66
D=A
@SP
A=M
M=D
@SP
M=M+1
@31 // push constant 31
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@31 // push constant 31
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@31 // push constant 31
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_70 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_70)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@67 // push constant 67
D=A
@SP
A=M
M=D
@SP
M=M+1
@28 // push constant 28
D=A
@SP
A=M
M=D
@SP
M=M+1
@54 // push constant 54
D=A
@SP
A=M
M=D
@SP
M=M+1
@35 // push constant 35
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@35 // push constant 35
D=A
@SP
A=M
M=D
@SP
M=M+1
@54 // push constant 54
D=A
@SP
A=M
M=D
@SP
M=M+1
@28 // push constant 28
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_71 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_71)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@68 // push constant 68
D=A
@SP
A=M
M=D
@SP
M=M+1
@15 // push constant 15
D=A
@SP
A=M
M=D
@SP
M=M+1
@27 // push constant 27
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@27 // push constant 27
D=A
@SP
A=M
M=D
@SP
M=M+1
@15 // push constant 15
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_72 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_72)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@69 // push constant 69
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@35 // push constant 35
D=A
@SP
A=M
M=D
@SP
M=M+1
@11 // push constant 11
D=A
@SP
A=M
M=D
@SP
M=M+1
@15 // push constant 15
D=A
@SP
A=M
M=D
@SP
M=M+1
@11 // push constant 11
D=A
@SP
A=M
M=D
@SP
M=M+1
@35 // push constant 35
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_73 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_73)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@70 // push constant 70
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@35 // push constant 35
D=A
@SP
A=M
M=D
@SP
M=M+1
@11 // push constant 11
D=A
@SP
A=M
M=D
@SP
M=M+1
@15 // push constant 15
D=A
@SP
A=M
M=D
@SP
M=M+1
@11 // push constant 11
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_74 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_74)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@71 // push constant 71
D=A
@SP
A=M
M=D
@SP
M=M+1
@28 // push constant 28
D=A
@SP
A=M
M=D
@SP
M=M+1
@54 // push constant 54
D=A
@SP
A=M
M=D
@SP
M=M+1
@35 // push constant 35
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@59 // push constant 59
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@54 // push constant 54
D=A
@SP
A=M
M=D
@SP
M=M+1
@44 // push constant 44
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_75 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_75)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@72 // push constant 72
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_76 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_76)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@73 // push constant 73
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_77 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_77)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@74 // push constant 74
D=A
@SP
A=M
M=D
@SP
M=M+1
@60 // push constant 60
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@27 // push constant 27
D=A
@SP
A=M
M=D
@SP
M=M+1
@27 // push constant 27
D=A
@SP
A=M
M=D
@SP
M=M+1
@14 // push constant 14
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_78 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_78)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@75 // push constant 75
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@27 // push constant 27
D=A
@SP
A=M
M=D
@SP
M=M+1
@15 // push constant 15
D=A
@SP
A=M
M=D
@SP
M=M+1
@27 // push constant 27
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_79 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_79)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@76 // push constant 76
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@35 // push constant 35
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_80 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_80)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@77 // push constant 77
D=A
@SP
A=M
M=D
@SP
M=M+1
@33 // push constant 33
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_81 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_81)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@78 // push constant 78
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@55 // push constant 55
D=A
@SP
A=M
M=D
@SP
M=M+1
@55 // push constant 55
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@59 // push constant 59
D=A
@SP
A=M
M=D
@SP
M=M+1
@59 // push constant 59
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_82 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_82)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@79 // push constant 79
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_83 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_83)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@80 // push constant 80
D=A
@SP
A=M
M=D
@SP
M=M+1
@31 // push constant 31
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@31 // push constant 31
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_84 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_84)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@81 // push constant 81
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@59 // push constant 59
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_85 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_85)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@82 // push constant 82
D=A
@SP
A=M
M=D
@SP
M=M+1
@31 // push constant 31
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@31 // push constant 31
D=A
@SP
A=M
M=D
@SP
M=M+1
@27 // push constant 27
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_86 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_86)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@83 // push constant 83
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@28 // push constant 28
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_87 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_87)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@84 // push constant 84
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@45 // push constant 45
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_88 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_88)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@85 // push constant 85
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_89 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_89)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@86 // push constant 86
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_90 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_90)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@87 // push constant 87
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@18 // push constant 18
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_91 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_91)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@88 // push constant 88
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_92 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_92)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@89 // push constant 89
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_93 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_93)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@90 // push constant 90
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@49 // push constant 49
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@35 // push constant 35
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_94 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_94)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@91 // push constant 91
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_95 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_95)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@92 // push constant 92
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@32 // push constant 32
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_96 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_96)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@93 // push constant 93
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_97 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_97)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@94 // push constant 94
D=A
@SP
A=M
M=D
@SP
M=M+1
@8 // push constant 8
D=A
@SP
A=M
M=D
@SP
M=M+1
@28 // push constant 28
D=A
@SP
A=M
M=D
@SP
M=M+1
@54 // push constant 54
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_98 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_98)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@95 // push constant 95
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_99 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_99)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@96 // push constant 96
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_100 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_100)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@97 // push constant 97
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@14 // push constant 14
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@27 // push constant 27
D=A
@SP
A=M
M=D
@SP
M=M+1
@27 // push constant 27
D=A
@SP
A=M
M=D
@SP
M=M+1
@54 // push constant 54
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_101 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_101)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@98 // push constant 98
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@15 // push constant 15
D=A
@SP
A=M
M=D
@SP
M=M+1
@27 // push constant 27
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_102 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_102)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@99 // push constant 99
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_103 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_103)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@100 // push constant 100
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@60 // push constant 60
D=A
@SP
A=M
M=D
@SP
M=M+1
@54 // push constant 54
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_104 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_104)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@101 // push constant 101
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_105 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_105)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@102 // push constant 102
D=A
@SP
A=M
M=D
@SP
M=M+1
@28 // push constant 28
D=A
@SP
A=M
M=D
@SP
M=M+1
@54 // push constant 54
D=A
@SP
A=M
M=D
@SP
M=M+1
@38 // push constant 38
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@15 // push constant 15
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@15 // push constant 15
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_106 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_106)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@103 // push constant 103
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@62 // push constant 62
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_107 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_107)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@104 // push constant 104
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@27 // push constant 27
D=A
@SP
A=M
M=D
@SP
M=M+1
@55 // push constant 55
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_108 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_108)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@105 // push constant 105
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@14 // push constant 14
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_109 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_109)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@106 // push constant 106
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@56 // push constant 56
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_110 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_110)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@107 // push constant 107
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@27 // push constant 27
D=A
@SP
A=M
M=D
@SP
M=M+1
@15 // push constant 15
D=A
@SP
A=M
M=D
@SP
M=M+1
@15 // push constant 15
D=A
@SP
A=M
M=D
@SP
M=M+1
@27 // push constant 27
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_111 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_111)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@108 // push constant 108
D=A
@SP
A=M
M=D
@SP
M=M+1
@14 // push constant 14
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_112 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_112)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@109 // push constant 109
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@29 // push constant 29
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@43 // push constant 43
D=A
@SP
A=M
M=D
@SP
M=M+1
@43 // push constant 43
D=A
@SP
A=M
M=D
@SP
M=M+1
@43 // push constant 43
D=A
@SP
A=M
M=D
@SP
M=M+1
@43 // push constant 43
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_113 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_113)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@110 // push constant 110
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@29 // push constant 29
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_114 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_114)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@111 // push constant 111
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_115 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_115)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@112 // push constant 112
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@31 // push constant 31
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_116 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_116)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@113 // push constant 113
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@62 // push constant 62
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_117 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_117)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@114 // push constant 114
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@29 // push constant 29
D=A
@SP
A=M
M=D
@SP
M=M+1
@55 // push constant 55
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@7 // push constant 7
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_118 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_118)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@115 // push constant 115
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_119 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_119)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@116 // push constant 116
D=A
@SP
A=M
M=D
@SP
M=M+1
@4 // push constant 4
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@15 // push constant 15
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@54 // push constant 54
D=A
@SP
A=M
M=D
@SP
M=M+1
@28 // push constant 28
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_120 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_120)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@117 // push constant 117
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@27 // push constant 27
D=A
@SP
A=M
M=D
@SP
M=M+1
@27 // push constant 27
D=A
@SP
A=M
M=D
@SP
M=M+1
@27 // push constant 27
D=A
@SP
A=M
M=D
@SP
M=M+1
@27 // push constant 27
D=A
@SP
A=M
M=D
@SP
M=M+1
@27 // push constant 27
D=A
@SP
A=M
M=D
@SP
M=M+1
@54 // push constant 54
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_121 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_121)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@118 // push constant 118
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_122 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_122)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@119 // push constant 119
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@18 // push constant 18
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_123 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_123)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@120 // push constant 120
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_124 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_124)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@121 // push constant 121
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@62 // push constant 62
D=A
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@24 // push constant 24
D=A
@SP
A=M
M=D
@SP
M=M+1
@15 // push constant 15
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_125 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_125)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@122 // push constant 122
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@27 // push constant 27
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@51 // push constant 51
D=A
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_126 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_126)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@123 // push constant 123
D=A
@SP
A=M
M=D
@SP
M=M+1
@56 // push constant 56
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@7 // push constant 7
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@56 // push constant 56
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_127 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_127)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@124 // push constant 124
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_128 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_128)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@125 // push constant 125
D=A
@SP
A=M
M=D
@SP
M=M+1
@7 // push constant 7
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@56 // push constant 56
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@7 // push constant 7
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_129 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_129)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@126 // push constant 126
D=A
@SP
A=M
M=D
@SP
M=M+1
@38 // push constant 38
D=A
@SP
A=M
M=D
@SP
M=M+1
@45 // push constant 45
D=A
@SP
A=M
M=D
@SP
M=M+1
@25 // push constant 25
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.create_RETURN_130 // call Output.create 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.create_RETURN_130)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(Output.create)// initializa local variables
@1
D=A
@R13
M=D
(Output.create_INIT_LOCALS_LOOP)
@Output.create_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Output.create_INIT_LOCALS_LOOP
0;JMP
(Output.create_INIT_LOCALS_END)
@11 // push constant 11
D=A
@SP
A=M
M=D
@SP
M=M+1
@Array.new_RETURN_131 // call Array.new 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.new
0;JMP
(Array.new_RETURN_131)
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Output.5 // push static 5
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@ARG // push argument 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@2 // push constant 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@ARG // push argument 3
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@ARG // push argument 4
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@4 // push constant 4
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@ARG // push argument 5
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@5 // push constant 5
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@ARG // push argument 6
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@ARG // push argument 7
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@7 // push constant 7
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@ARG // push argument 8
D=M
@8
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@8 // push constant 8
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@ARG // push argument 9
D=M
@9
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@9 // push constant 9
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@ARG // push argument 10
D=M
@10
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@10 // push constant 10
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@ARG // push argument 11
D=M
@11
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(Output.createShiftedMap)// initializa local variables
@4
D=A
@R13
M=D
(Output.createShiftedMap_INIT_LOCALS_LOOP)
@Output.createShiftedMap_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Output.createShiftedMap_INIT_LOCALS_LOOP
0;JMP
(Output.createShiftedMap_INIT_LOCALS_END)
@127 // push constant 127
D=A
@SP
A=M
M=D
@SP
M=M+1
@Array.new_RETURN_132 // call Array.new 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.new
0;JMP
(Array.new_RETURN_132)
@SP // pop static 6
M=M-1
A=M
D=M
@Output.6
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 2
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(WHILE_EXP0)
@LCL // push local 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@127 // push constant 127
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // lt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JLT_TRUE_Output_38
D;JLT
D=0
@JLT_FALSE_Output_38
0;JMP
(JLT_TRUE_Output_38)
D=-1
(JLT_FALSE_Output_38)
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@WHILE_END0
D;JNE
@LCL // push local 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Output.5 // push static 5
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@11 // push constant 11
D=A
@SP
A=M
M=D
@SP
M=M+1
@Array.new_RETURN_133 // call Array.new 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.new
0;JMP
(Array.new_RETURN_133)
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Output.6 // push static 6
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 3
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(WHILE_EXP1)
@LCL // push local 3
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@11 // push constant 11
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // lt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JLT_TRUE_Output_39
D;JLT
D=0
@JLT_FALSE_Output_39
0;JMP
(JLT_TRUE_Output_39)
D=-1
(JLT_FALSE_Output_39)
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@WHILE_END1
D;JNE
@LCL // push local 3
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // push local 3
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@256 // push constant 256
D=A
@SP
A=M
M=D
@SP
M=M+1
@Math.multiply_RETURN_134 // call Math.multiply 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Math.multiply_RETURN_134)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 3
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 3
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@WHILE_EXP1
0;JMP
(WHILE_END1)
@LCL // push local 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // eq
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JEQ_Output_40
D;JEQ
D=1
(JEQ_Output_40)
D=D-1
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
M=0
@IF_TRUE0
D;JNE
@IF_FALSE0
0;JMP
(IF_TRUE0)
@32 // push constant 32
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 2
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@IF_END0
0;JMP
(IF_FALSE0)
@LCL // push local 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 2
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(IF_END0)
@WHILE_EXP0
0;JMP
(WHILE_END0)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(Output.getMap)// initializa local variables
@1
D=A
@R13
M=D
(Output.getMap_INIT_LOCALS_LOOP)
@Output.getMap_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Output.getMap_INIT_LOCALS_LOOP
0;JMP
(Output.getMap_INIT_LOCALS_END)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@32 // push constant 32
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // lt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JLT_TRUE_Output_41
D;JLT
D=0
@JLT_FALSE_Output_41
0;JMP
(JLT_TRUE_Output_41)
D=-1
(JLT_FALSE_Output_41)
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@126 // push constant 126
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // gt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JGT_TRUE_Output_42
D;JGT
D=0
@JGT_FALSE_Output_42
0;JMP
(JGT_TRUE_Output_42)
D=-1
(JGT_FALSE_Output_42)
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D|M
@SP
AM=M-1
D=M
M=0
@IF_TRUE0
D;JNE
@IF_FALSE0
0;JMP
(IF_TRUE0)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@ARG // pop argument 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(IF_FALSE0)
@Output.2 // push static 2
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
M=0
@IF_TRUE1
D;JNE
@IF_FALSE1
0;JMP
(IF_TRUE1)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Output.5 // push static 5
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@IF_END1
0;JMP
(IF_FALSE1)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Output.6 // push static 6
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(IF_END1)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(Output.drawChar)// initializa local variables
@4
D=A
@R13
M=D
(Output.drawChar_INIT_LOCALS_LOOP)
@Output.drawChar_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Output.drawChar_INIT_LOCALS_LOOP
0;JMP
(Output.drawChar_INIT_LOCALS_END)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Output.getMap_RETURN_135 // call Output.getMap 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.getMap
0;JMP
(Output.getMap_RETURN_135)
@LCL // pop local 2
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@Output.1 // push static 1
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(WHILE_EXP0)
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@11 // push constant 11
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // lt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JLT_TRUE_Output_43
D;JLT
D=0
@JLT_FALSE_Output_43
0;JMP
(JLT_TRUE_Output_43)
D=-1
(JLT_FALSE_Output_43)
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@WHILE_END0
D;JNE
@Output.2 // push static 2
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
M=0
@IF_TRUE0
D;JNE
@IF_FALSE0
0;JMP
(IF_TRUE0)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Output.4 // push static 4
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@256 // push constant 256
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=-M
@SP
AM=M-1
D=M
A=A-1
M=D&M
@LCL // pop local 3
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@IF_END0
0;JMP
(IF_FALSE0)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Output.4 // push static 4
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@255 // push constant 255
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D&M
@LCL // pop local 3
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(IF_END0)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Output.4 // push static 4
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 3
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D|M
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@32 // push constant 32
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@WHILE_EXP0
0;JMP
(WHILE_END0)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(Output.moveCursor)// initializa local variables
@0
D=A
@R13
M=D
(Output.moveCursor_INIT_LOCALS_LOOP)
@Output.moveCursor_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Output.moveCursor_INIT_LOCALS_LOOP
0;JMP
(Output.moveCursor_INIT_LOCALS_END)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // lt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JLT_TRUE_Output_44
D;JLT
D=0
@JLT_FALSE_Output_44
0;JMP
(JLT_TRUE_Output_44)
D=-1
(JLT_FALSE_Output_44)
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@22 // push constant 22
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // gt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JGT_TRUE_Output_45
D;JGT
D=0
@JGT_FALSE_Output_45
0;JMP
(JGT_TRUE_Output_45)
D=-1
(JGT_FALSE_Output_45)
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D|M
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // lt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JLT_TRUE_Output_46
D;JLT
D=0
@JLT_FALSE_Output_46
0;JMP
(JLT_TRUE_Output_46)
D=-1
(JLT_FALSE_Output_46)
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D|M
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@63 // push constant 63
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // gt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JGT_TRUE_Output_47
D;JGT
D=0
@JGT_FALSE_Output_47
0;JMP
(JGT_TRUE_Output_47)
D=-1
(JGT_FALSE_Output_47)
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D|M
@SP
AM=M-1
D=M
M=0
@IF_TRUE0
D;JNE
@IF_FALSE0
0;JMP
(IF_TRUE0)
@20 // push constant 20
D=A
@SP
A=M
M=D
@SP
M=M+1
@Sys.error_RETURN_136 // call Sys.error 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(Sys.error_RETURN_136)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
(IF_FALSE0)
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2 // push constant 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@Math.divide_RETURN_137 // call Math.divide 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(Math.divide_RETURN_137)
@SP // pop static 0
M=M-1
A=M
D=M
@Output.0
M=D
@32 // push constant 32
D=A
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@352 // push constant 352
D=A
@SP
A=M
M=D
@SP
M=M+1
@Math.multiply_RETURN_138 // call Math.multiply 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Math.multiply_RETURN_138)
@SP
AM=M-1
D=M
A=A-1
M=D+M
@Output.0 // push static 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop static 1
M=M-1
A=M
D=M
@Output.1
M=D
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Output.0 // push static 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@2 // push constant 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@Math.multiply_RETURN_139 // call Math.multiply 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Math.multiply_RETURN_139)
@SP // eq
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JEQ_Output_48
D;JEQ
D=1
(JEQ_Output_48)
D=D-1
@SP
A=M
M=D
@SP
M=M+1
@SP // pop static 2
M=M-1
A=M
D=M
@Output.2
M=D
@32 // push constant 32
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.drawChar_RETURN_140 // call Output.drawChar 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.drawChar
0;JMP
(Output.drawChar_RETURN_140)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(Output.printChar)// initializa local variables
@0
D=A
@R13
M=D
(Output.printChar_INIT_LOCALS_LOOP)
@Output.printChar_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Output.printChar_INIT_LOCALS_LOOP
0;JMP
(Output.printChar_INIT_LOCALS_END)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@String.newLine_RETURN_141 // call String.newLine 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.newLine
0;JMP
(String.newLine_RETURN_141)
@SP // eq
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JEQ_Output_49
D;JEQ
D=1
(JEQ_Output_49)
D=D-1
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
M=0
@IF_TRUE0
D;JNE
@IF_FALSE0
0;JMP
(IF_TRUE0)
@Output.println_RETURN_142 // call Output.println 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.println
0;JMP
(Output.println_RETURN_142)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@IF_END0
0;JMP
(IF_FALSE0)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@String.backSpace_RETURN_143 // call String.backSpace 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.backSpace
0;JMP
(String.backSpace_RETURN_143)
@SP // eq
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JEQ_Output_50
D;JEQ
D=1
(JEQ_Output_50)
D=D-1
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
M=0
@IF_TRUE1
D;JNE
@IF_FALSE1
0;JMP
(IF_TRUE1)
@Output.backSpace_RETURN_144 // call Output.backSpace 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.backSpace
0;JMP
(Output.backSpace_RETURN_144)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@IF_END1
0;JMP
(IF_FALSE1)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Output.drawChar_RETURN_145 // call Output.drawChar 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.drawChar
0;JMP
(Output.drawChar_RETURN_145)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@Output.2 // push static 2
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@IF_TRUE2
D;JNE
@IF_FALSE2
0;JMP
(IF_TRUE2)
@Output.0 // push static 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop static 0
M=M-1
A=M
D=M
@Output.0
M=D
@Output.1 // push static 1
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop static 1
M=M-1
A=M
D=M
@Output.1
M=D
(IF_FALSE2)
@Output.0 // push static 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@32 // push constant 32
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // eq
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JEQ_Output_51
D;JEQ
D=1
(JEQ_Output_51)
D=D-1
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
M=0
@IF_TRUE3
D;JNE
@IF_FALSE3
0;JMP
(IF_TRUE3)
@Output.println_RETURN_146 // call Output.println 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.println
0;JMP
(Output.println_RETURN_146)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@IF_END3
0;JMP
(IF_FALSE3)
@Output.2 // push static 2
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=!M
@SP // pop static 2
M=M-1
A=M
D=M
@Output.2
M=D
(IF_END3)
(IF_END1)
(IF_END0)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(Output.printString)// initializa local variables
@2
D=A
@R13
M=D
(Output.printString_INIT_LOCALS_LOOP)
@Output.printString_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Output.printString_INIT_LOCALS_LOOP
0;JMP
(Output.printString_INIT_LOCALS_END)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@String.length_RETURN_147 // call String.length 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.length
0;JMP
(String.length_RETURN_147)
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(WHILE_EXP0)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // lt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JLT_TRUE_Output_52
D;JLT
D=0
@JLT_FALSE_Output_52
0;JMP
(JLT_TRUE_Output_52)
D=-1
(JLT_FALSE_Output_52)
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@WHILE_END0
D;JNE
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@String.charAt_RETURN_148 // call String.charAt 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.charAt
0;JMP
(String.charAt_RETURN_148)
@Output.printChar_RETURN_149 // call Output.printChar 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printChar
0;JMP
(Output.printChar_RETURN_149)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@WHILE_EXP0
0;JMP
(WHILE_END0)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(Output.printInt)// initializa local variables
@0
D=A
@R13
M=D
(Output.printInt_INIT_LOCALS_LOOP)
@Output.printInt_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Output.printInt_INIT_LOCALS_LOOP
0;JMP
(Output.printInt_INIT_LOCALS_END)
@Output.3 // push static 3
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@String.setInt_RETURN_150 // call String.setInt 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.setInt
0;JMP
(String.setInt_RETURN_150)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@Output.3 // push static 3
D=M
@SP
A=M
M=D
@SP
M=M+1
@Output.printString_RETURN_151 // call Output.printString 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printString
0;JMP
(Output.printString_RETURN_151)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(Output.println)// initializa local variables
@0
D=A
@R13
M=D
(Output.println_INIT_LOCALS_LOOP)
@Output.println_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Output.println_INIT_LOCALS_LOOP
0;JMP
(Output.println_INIT_LOCALS_END)
@Output.1 // push static 1
D=M
@SP
A=M
M=D
@SP
M=M+1
@352 // push constant 352
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@Output.0 // push static 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP // pop static 1
M=M-1
A=M
D=M
@Output.1
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // pop static 0
M=M-1
A=M
D=M
@Output.0
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=!M
@SP // pop static 2
M=M-1
A=M
D=M
@Output.2
M=D
@Output.1 // push static 1
D=M
@SP
A=M
M=D
@SP
M=M+1
@8128 // push constant 8128
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // eq
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JEQ_Output_53
D;JEQ
D=1
(JEQ_Output_53)
D=D-1
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
M=0
@IF_TRUE0
D;JNE
@IF_FALSE0
0;JMP
(IF_TRUE0)
@32 // push constant 32
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // pop static 1
M=M-1
A=M
D=M
@Output.1
M=D
(IF_FALSE0)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(Output.backSpace)// initializa local variables
@0
D=A
@R13
M=D
(Output.backSpace_INIT_LOCALS_LOOP)
@Output.backSpace_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Output.backSpace_INIT_LOCALS_LOOP
0;JMP
(Output.backSpace_INIT_LOCALS_END)
@Output.2 // push static 2
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
M=0
@IF_TRUE0
D;JNE
@IF_FALSE0
0;JMP
(IF_TRUE0)
@Output.0 // push static 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // gt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JGT_TRUE_Output_54
D;JGT
D=0
@JGT_FALSE_Output_54
0;JMP
(JGT_TRUE_Output_54)
D=-1
(JGT_FALSE_Output_54)
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
M=0
@IF_TRUE1
D;JNE
@IF_FALSE1
0;JMP
(IF_TRUE1)
@Output.0 // push static 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP // pop static 0
M=M-1
A=M
D=M
@Output.0
M=D
@Output.1 // push static 1
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP // pop static 1
M=M-1
A=M
D=M
@Output.1
M=D
@IF_END1
0;JMP
(IF_FALSE1)
@31 // push constant 31
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // pop static 0
M=M-1
A=M
D=M
@Output.0
M=D
@Output.1 // push static 1
D=M
@SP
A=M
M=D
@SP
M=M+1
@32 // push constant 32
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // eq
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JEQ_Output_55
D;JEQ
D=1
(JEQ_Output_55)
D=D-1
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
M=0
@IF_TRUE2
D;JNE
@IF_FALSE2
0;JMP
(IF_TRUE2)
@8128 // push constant 8128
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // pop static 1
M=M-1
A=M
D=M
@Output.1
M=D
(IF_FALSE2)
@Output.1 // push static 1
D=M
@SP
A=M
M=D
@SP
M=M+1
@321 // push constant 321
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP // pop static 1
M=M-1
A=M
D=M
@Output.1
M=D
(IF_END1)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // pop static 2
M=M-1
A=M
D=M
@Output.2
M=D
@IF_END0
0;JMP
(IF_FALSE0)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=!M
@SP // pop static 2
M=M-1
A=M
D=M
@Output.2
M=D
(IF_END0)
@32 // push constant 32
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.drawChar_RETURN_152 // call Output.drawChar 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.drawChar
0;JMP
(Output.drawChar_RETURN_152)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(Screen.init)// initializa local variables
@1
D=A
@R13
M=D
(Screen.init_INIT_LOCALS_LOOP)
@Screen.init_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Screen.init_INIT_LOCALS_LOOP
0;JMP
(Screen.init_INIT_LOCALS_END)
@16384 // push constant 16384
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // pop static 1
M=M-1
A=M
D=M
@Screen.1
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=!M
@SP // pop static 2
M=M-1
A=M
D=M
@Screen.2
M=D
@17 // push constant 17
D=A
@SP
A=M
M=D
@SP
M=M+1
@Array.new_RETURN_153 // call Array.new 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.new
0;JMP
(Array.new_RETURN_153)
@SP // pop static 0
M=M-1
A=M
D=M
@Screen.0
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Screen.0 // push static 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(WHILE_EXP0)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@16 // push constant 16
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // lt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JLT_TRUE_Screen_56
D;JLT
D=0
@JLT_FALSE_Screen_56
0;JMP
(JLT_TRUE_Screen_56)
D=-1
(JLT_FALSE_Screen_56)
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@WHILE_END0
D;JNE
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Screen.0 // push static 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@Screen.0 // push static 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@Screen.0 // push static 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@WHILE_EXP0
0;JMP
(WHILE_END0)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(Screen.clearScreen)// initializa local variables
@1
D=A
@R13
M=D
(Screen.clearScreen_INIT_LOCALS_LOOP)
@Screen.clearScreen_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Screen.clearScreen_INIT_LOCALS_LOOP
0;JMP
(Screen.clearScreen_INIT_LOCALS_END)
(WHILE_EXP0)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@8192 // push constant 8192
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // lt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JLT_TRUE_Screen_57
D;JLT
D=0
@JLT_FALSE_Screen_57
0;JMP
(JLT_TRUE_Screen_57)
D=-1
(JLT_FALSE_Screen_57)
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@WHILE_END0
D;JNE
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Screen.1 // push static 1
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@WHILE_EXP0
0;JMP
(WHILE_END0)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(Screen.updateLocation)// initializa local variables
@0
D=A
@R13
M=D
(Screen.updateLocation_INIT_LOCALS_LOOP)
@Screen.updateLocation_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Screen.updateLocation_INIT_LOCALS_LOOP
0;JMP
(Screen.updateLocation_INIT_LOCALS_END)
@Screen.2 // push static 2
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
M=0
@IF_TRUE0
D;JNE
@IF_FALSE0
0;JMP
(IF_TRUE0)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Screen.1 // push static 1
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Screen.1 // push static 1
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D|M
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@IF_END0
0;JMP
(IF_FALSE0)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Screen.1 // push static 1
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Screen.1 // push static 1
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
A=A-1
M=D&M
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(IF_END0)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(Screen.setColor)// initializa local variables
@0
D=A
@R13
M=D
(Screen.setColor_INIT_LOCALS_LOOP)
@Screen.setColor_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Screen.setColor_INIT_LOCALS_LOOP
0;JMP
(Screen.setColor_INIT_LOCALS_END)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop static 2
M=M-1
A=M
D=M
@Screen.2
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(Screen.drawPixel)// initializa local variables
@3
D=A
@R13
M=D
(Screen.drawPixel_INIT_LOCALS_LOOP)
@Screen.drawPixel_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Screen.drawPixel_INIT_LOCALS_LOOP
0;JMP
(Screen.drawPixel_INIT_LOCALS_END)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // lt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JLT_TRUE_Screen_58
D;JLT
D=0
@JLT_FALSE_Screen_58
0;JMP
(JLT_TRUE_Screen_58)
D=-1
(JLT_FALSE_Screen_58)
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@511 // push constant 511
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // gt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JGT_TRUE_Screen_59
D;JGT
D=0
@JGT_FALSE_Screen_59
0;JMP
(JGT_TRUE_Screen_59)
D=-1
(JGT_FALSE_Screen_59)
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D|M
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // lt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JLT_TRUE_Screen_60
D;JLT
D=0
@JLT_FALSE_Screen_60
0;JMP
(JLT_TRUE_Screen_60)
D=-1
(JLT_FALSE_Screen_60)
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D|M
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@255 // push constant 255
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // gt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JGT_TRUE_Screen_61
D;JGT
D=0
@JGT_FALSE_Screen_61
0;JMP
(JGT_TRUE_Screen_61)
D=-1
(JGT_FALSE_Screen_61)
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D|M
@SP
AM=M-1
D=M
M=0
@IF_TRUE0
D;JNE
@IF_FALSE0
0;JMP
(IF_TRUE0)
@7 // push constant 7
D=A
@SP
A=M
M=D
@SP
M=M+1
@Sys.error_RETURN_154 // call Sys.error 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(Sys.error_RETURN_154)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
(IF_FALSE0)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@16 // push constant 16
D=A
@SP
A=M
M=D
@SP
M=M+1
@Math.divide_RETURN_155 // call Math.divide 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(Math.divide_RETURN_155)
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@16 // push constant 16
D=A
@SP
A=M
M=D
@SP
M=M+1
@Math.multiply_RETURN_156 // call Math.multiply 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Math.multiply_RETURN_156)
@SP
AM=M-1
D=M
A=A-1
M=M-D
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@32 // push constant 32
D=A
@SP
A=M
M=D
@SP
M=M+1
@Math.multiply_RETURN_157 // call Math.multiply 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Math.multiply_RETURN_157)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 2
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Screen.0 // push static 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Screen.updateLocation_RETURN_158 // call Screen.updateLocation 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.updateLocation
0;JMP
(Screen.updateLocation_RETURN_158)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(Screen.drawConditional)// initializa local variables
@0
D=A
@R13
M=D
(Screen.drawConditional_INIT_LOCALS_LOOP)
@Screen.drawConditional_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Screen.drawConditional_INIT_LOCALS_LOOP
0;JMP
(Screen.drawConditional_INIT_LOCALS_END)
@ARG // push argument 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
M=0
@IF_TRUE0
D;JNE
@IF_FALSE0
0;JMP
(IF_TRUE0)
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Screen.drawPixel_RETURN_159 // call Screen.drawPixel 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawPixel
0;JMP
(Screen.drawPixel_RETURN_159)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@IF_END0
0;JMP
(IF_FALSE0)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Screen.drawPixel_RETURN_160 // call Screen.drawPixel 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawPixel
0;JMP
(Screen.drawPixel_RETURN_160)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
(IF_END0)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(Screen.drawLine)// initializa local variables
@11
D=A
@R13
M=D
(Screen.drawLine_INIT_LOCALS_LOOP)
@Screen.drawLine_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Screen.drawLine_INIT_LOCALS_LOOP
0;JMP
(Screen.drawLine_INIT_LOCALS_END)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // lt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JLT_TRUE_Screen_62
D;JLT
D=0
@JLT_FALSE_Screen_62
0;JMP
(JLT_TRUE_Screen_62)
D=-1
(JLT_FALSE_Screen_62)
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@511 // push constant 511
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // gt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JGT_TRUE_Screen_63
D;JGT
D=0
@JGT_FALSE_Screen_63
0;JMP
(JGT_TRUE_Screen_63)
D=-1
(JGT_FALSE_Screen_63)
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D|M
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // lt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JLT_TRUE_Screen_64
D;JLT
D=0
@JLT_FALSE_Screen_64
0;JMP
(JLT_TRUE_Screen_64)
D=-1
(JLT_FALSE_Screen_64)
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D|M
@ARG // push argument 3
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@255 // push constant 255
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // gt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JGT_TRUE_Screen_65
D;JGT
D=0
@JGT_FALSE_Screen_65
0;JMP
(JGT_TRUE_Screen_65)
D=-1
(JGT_FALSE_Screen_65)
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D|M
@SP
AM=M-1
D=M
M=0
@IF_TRUE0
D;JNE
@IF_FALSE0
0;JMP
(IF_TRUE0)
@8 // push constant 8
D=A
@SP
A=M
M=D
@SP
M=M+1
@Sys.error_RETURN_161 // call Sys.error 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(Sys.error_RETURN_161)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
(IF_FALSE0)
@ARG // push argument 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@Math.abs_RETURN_162 // call Math.abs 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.abs
0;JMP
(Math.abs_RETURN_162)
@LCL // pop local 3
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 3
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@Math.abs_RETURN_163 // call Math.abs 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.abs
0;JMP
(Math.abs_RETURN_163)
@LCL // pop local 2
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 3
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // lt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JLT_TRUE_Screen_66
D;JLT
D=0
@JLT_FALSE_Screen_66
0;JMP
(JLT_TRUE_Screen_66)
D=-1
(JLT_FALSE_Screen_66)
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 6
D=M
@6
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 6
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 3
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // lt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JLT_TRUE_Screen_67
D;JLT
D=0
@JLT_FALSE_Screen_67
0;JMP
(JLT_TRUE_Screen_67)
D=-1
(JLT_FALSE_Screen_67)
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D&M
@LCL // push local 6
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=!M
@ARG // push argument 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // lt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JLT_TRUE_Screen_68
D;JLT
D=0
@JLT_FALSE_Screen_68
0;JMP
(JLT_TRUE_Screen_68)
D=-1
(JLT_FALSE_Screen_68)
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D&M
@SP
AM=M-1
D=M
A=A-1
M=D|M
@SP
AM=M-1
D=M
M=0
@IF_TRUE1
D;JNE
@IF_FALSE1
0;JMP
(IF_TRUE1)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 4
D=M
@4
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // pop argument 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 4
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // pop argument 2
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 4
D=M
@4
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 3
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // pop argument 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 4
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // pop argument 3
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(IF_FALSE1)
@LCL // push local 6
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
M=0
@IF_TRUE2
D;JNE
@IF_FALSE2
0;JMP
(IF_TRUE2)
@LCL // push local 3
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 4
D=M
@4
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 3
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 4
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 2
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 3
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 8
D=M
@8
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // gt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JGT_TRUE_Screen_69
D;JGT
D=0
@JGT_FALSE_Screen_69
0;JMP
(JGT_TRUE_Screen_69)
D=-1
(JGT_FALSE_Screen_69)
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 7
D=M
@7
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@IF_END2
0;JMP
(IF_FALSE2)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 8
D=M
@8
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 3
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // gt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JGT_TRUE_Screen_70
D;JGT
D=0
@JGT_FALSE_Screen_70
0;JMP
(JGT_TRUE_Screen_70)
D=-1
(JGT_FALSE_Screen_70)
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 7
D=M
@7
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(IF_END2)
@2 // push constant 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Math.multiply_RETURN_164 // call Math.multiply 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Math.multiply_RETURN_164)
@LCL // push local 3
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@LCL // pop local 5
D=M
@5
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@2 // push constant 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Math.multiply_RETURN_165 // call Math.multiply 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Math.multiply_RETURN_165)
@LCL // pop local 9
D=M
@9
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@2 // push constant 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 3
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@Math.multiply_RETURN_166 // call Math.multiply 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Math.multiply_RETURN_166)
@LCL // pop local 10
D=M
@10
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 6
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Screen.drawConditional_RETURN_167 // call Screen.drawConditional 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawConditional
0;JMP
(Screen.drawConditional_RETURN_167)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
(WHILE_EXP0)
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 8
D=M
@8
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // lt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JLT_TRUE_Screen_71
D;JLT
D=0
@JLT_FALSE_Screen_71
0;JMP
(JLT_TRUE_Screen_71)
D=-1
(JLT_FALSE_Screen_71)
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@WHILE_END0
D;JNE
@LCL // push local 5
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // lt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JLT_TRUE_Screen_72
D;JLT
D=0
@JLT_FALSE_Screen_72
0;JMP
(JLT_TRUE_Screen_72)
D=-1
(JLT_FALSE_Screen_72)
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
M=0
@IF_TRUE3
D;JNE
@IF_FALSE3
0;JMP
(IF_TRUE3)
@LCL // push local 5
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 9
D=M
@9
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 5
D=M
@5
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@IF_END3
0;JMP
(IF_FALSE3)
@LCL // push local 5
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 10
D=M
@10
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 5
D=M
@5
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 7
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
M=0
@IF_TRUE4
D;JNE
@IF_FALSE4
0;JMP
(IF_TRUE4)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@IF_END4
0;JMP
(IF_FALSE4)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(IF_END4)
(IF_END3)
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 6
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Screen.drawConditional_RETURN_168 // call Screen.drawConditional 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawConditional
0;JMP
(Screen.drawConditional_RETURN_168)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@WHILE_EXP0
0;JMP
(WHILE_END0)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(Screen.drawRectangle)// initializa local variables
@9
D=A
@R13
M=D
(Screen.drawRectangle_INIT_LOCALS_LOOP)
@Screen.drawRectangle_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Screen.drawRectangle_INIT_LOCALS_LOOP
0;JMP
(Screen.drawRectangle_INIT_LOCALS_END)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // gt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JGT_TRUE_Screen_73
D;JGT
D=0
@JGT_FALSE_Screen_73
0;JMP
(JGT_TRUE_Screen_73)
D=-1
(JGT_FALSE_Screen_73)
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 3
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // gt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JGT_TRUE_Screen_74
D;JGT
D=0
@JGT_FALSE_Screen_74
0;JMP
(JGT_TRUE_Screen_74)
D=-1
(JGT_FALSE_Screen_74)
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D|M
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // lt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JLT_TRUE_Screen_75
D;JLT
D=0
@JLT_FALSE_Screen_75
0;JMP
(JLT_TRUE_Screen_75)
D=-1
(JLT_FALSE_Screen_75)
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D|M
@ARG // push argument 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@511 // push constant 511
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // gt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JGT_TRUE_Screen_76
D;JGT
D=0
@JGT_FALSE_Screen_76
0;JMP
(JGT_TRUE_Screen_76)
D=-1
(JGT_FALSE_Screen_76)
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D|M
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // lt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JLT_TRUE_Screen_77
D;JLT
D=0
@JLT_FALSE_Screen_77
0;JMP
(JLT_TRUE_Screen_77)
D=-1
(JLT_FALSE_Screen_77)
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D|M
@ARG // push argument 3
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@255 // push constant 255
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // gt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JGT_TRUE_Screen_78
D;JGT
D=0
@JGT_FALSE_Screen_78
0;JMP
(JGT_TRUE_Screen_78)
D=-1
(JGT_FALSE_Screen_78)
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D|M
@SP
AM=M-1
D=M
M=0
@IF_TRUE0
D;JNE
@IF_FALSE0
0;JMP
(IF_TRUE0)
@9 // push constant 9
D=A
@SP
A=M
M=D
@SP
M=M+1
@Sys.error_RETURN_169 // call Sys.error 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(Sys.error_RETURN_169)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
(IF_FALSE0)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@16 // push constant 16
D=A
@SP
A=M
M=D
@SP
M=M+1
@Math.divide_RETURN_170 // call Math.divide 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(Math.divide_RETURN_170)
@LCL // pop local 3
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 3
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@16 // push constant 16
D=A
@SP
A=M
M=D
@SP
M=M+1
@Math.multiply_RETURN_171 // call Math.multiply 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Math.multiply_RETURN_171)
@SP
AM=M-1
D=M
A=A-1
M=M-D
@LCL // pop local 7
D=M
@7
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@16 // push constant 16
D=A
@SP
A=M
M=D
@SP
M=M+1
@Math.divide_RETURN_172 // call Math.divide 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(Math.divide_RETURN_172)
@LCL // pop local 4
D=M
@4
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 4
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@16 // push constant 16
D=A
@SP
A=M
M=D
@SP
M=M+1
@Math.multiply_RETURN_173 // call Math.multiply 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Math.multiply_RETURN_173)
@SP
AM=M-1
D=M
A=A-1
M=M-D
@LCL // pop local 8
D=M
@8
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 7
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Screen.0 // push static 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
A=M
A=A-1
M=!M
@LCL // pop local 6
D=M
@6
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 8
D=M
@8
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@Screen.0 // push static 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@LCL // pop local 5
D=M
@5
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@32 // push constant 32
D=A
@SP
A=M
M=D
@SP
M=M+1
@Math.multiply_RETURN_174 // call Math.multiply 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Math.multiply_RETURN_174)
@LCL // push local 3
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 4
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 3
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@LCL // pop local 2
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(WHILE_EXP0)
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 3
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // gt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JGT_TRUE_Screen_79
D;JGT
D=0
@JGT_FALSE_Screen_79
0;JMP
(JGT_TRUE_Screen_79)
D=-1
(JGT_FALSE_Screen_79)
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=!M
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@WHILE_END0
D;JNE
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // eq
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JEQ_Screen_80
D;JEQ
D=1
(JEQ_Screen_80)
D=D-1
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
M=0
@IF_TRUE1
D;JNE
@IF_FALSE1
0;JMP
(IF_TRUE1)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 5
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 6
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D&M
@Screen.updateLocation_RETURN_175 // call Screen.updateLocation 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.updateLocation
0;JMP
(Screen.updateLocation_RETURN_175)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@IF_END1
0;JMP
(IF_FALSE1)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 6
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Screen.updateLocation_RETURN_176 // call Screen.updateLocation 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.updateLocation
0;JMP
(Screen.updateLocation_RETURN_176)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(WHILE_EXP1)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // lt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JLT_TRUE_Screen_81
D;JLT
D=0
@JLT_FALSE_Screen_81
0;JMP
(JLT_TRUE_Screen_81)
D=-1
(JLT_FALSE_Screen_81)
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@WHILE_END1
D;JNE
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=-M
@Screen.updateLocation_RETURN_177 // call Screen.updateLocation 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.updateLocation
0;JMP
(Screen.updateLocation_RETURN_177)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@WHILE_EXP1
0;JMP
(WHILE_END1)
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 5
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Screen.updateLocation_RETURN_178 // call Screen.updateLocation 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.updateLocation
0;JMP
(Screen.updateLocation_RETURN_178)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
(IF_END1)
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@ARG // pop argument 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@32 // push constant 32
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // push local 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@WHILE_EXP0
0;JMP
(WHILE_END0)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(Screen.drawHorizontal)// initializa local variables
@11
D=A
@R13
M=D
(Screen.drawHorizontal_INIT_LOCALS_LOOP)
@Screen.drawHorizontal_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Screen.drawHorizontal_INIT_LOCALS_LOOP
0;JMP
(Screen.drawHorizontal_INIT_LOCALS_END)
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Math.min_RETURN_179 // call Math.min 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.min
0;JMP
(Math.min_RETURN_179)
@LCL // pop local 7
D=M
@7
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Math.max_RETURN_180 // call Math.max 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.max
0;JMP
(Math.max_RETURN_180)
@LCL // pop local 8
D=M
@8
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=-M
@SP // gt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JGT_TRUE_Screen_82
D;JGT
D=0
@JGT_FALSE_Screen_82
0;JMP
(JGT_TRUE_Screen_82)
D=-1
(JGT_FALSE_Screen_82)
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@256 // push constant 256
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // lt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JLT_TRUE_Screen_83
D;JLT
D=0
@JLT_FALSE_Screen_83
0;JMP
(JLT_TRUE_Screen_83)
D=-1
(JLT_FALSE_Screen_83)
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D&M
@LCL // push local 7
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@512 // push constant 512
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // lt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JLT_TRUE_Screen_84
D;JLT
D=0
@JLT_FALSE_Screen_84
0;JMP
(JLT_TRUE_Screen_84)
D=-1
(JLT_FALSE_Screen_84)
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D&M
@LCL // push local 8
D=M
@8
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=-M
@SP // gt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JGT_TRUE_Screen_85
D;JGT
D=0
@JGT_FALSE_Screen_85
0;JMP
(JGT_TRUE_Screen_85)
D=-1
(JGT_FALSE_Screen_85)
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D&M
@SP
AM=M-1
D=M
M=0
@IF_TRUE0
D;JNE
@IF_FALSE0
0;JMP
(IF_TRUE0)
@LCL // push local 7
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Math.max_RETURN_181 // call Math.max 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.max
0;JMP
(Math.max_RETURN_181)
@LCL // pop local 7
D=M
@7
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 8
D=M
@8
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@511 // push constant 511
D=A
@SP
A=M
M=D
@SP
M=M+1
@Math.min_RETURN_182 // call Math.min 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.min
0;JMP
(Math.min_RETURN_182)
@LCL // pop local 8
D=M
@8
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 7
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@16 // push constant 16
D=A
@SP
A=M
M=D
@SP
M=M+1
@Math.divide_RETURN_183 // call Math.divide 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(Math.divide_RETURN_183)
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 7
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@16 // push constant 16
D=A
@SP
A=M
M=D
@SP
M=M+1
@Math.multiply_RETURN_184 // call Math.multiply 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Math.multiply_RETURN_184)
@SP
AM=M-1
D=M
A=A-1
M=M-D
@LCL // pop local 9
D=M
@9
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 8
D=M
@8
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@16 // push constant 16
D=A
@SP
A=M
M=D
@SP
M=M+1
@Math.divide_RETURN_185 // call Math.divide 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(Math.divide_RETURN_185)
@LCL // pop local 2
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 8
D=M
@8
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@16 // push constant 16
D=A
@SP
A=M
M=D
@SP
M=M+1
@Math.multiply_RETURN_186 // call Math.multiply 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Math.multiply_RETURN_186)
@SP
AM=M-1
D=M
A=A-1
M=M-D
@LCL // pop local 10
D=M
@10
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 9
D=M
@9
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Screen.0 // push static 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
A=M
A=A-1
M=!M
@LCL // pop local 5
D=M
@5
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 10
D=M
@10
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@Screen.0 // push static 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@LCL // pop local 4
D=M
@4
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@32 // push constant 32
D=A
@SP
A=M
M=D
@SP
M=M+1
@Math.multiply_RETURN_187 // call Math.multiply 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Math.multiply_RETURN_187)
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@LCL // pop local 6
D=M
@6
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 6
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 3
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 6
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // eq
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JEQ_Screen_86
D;JEQ
D=1
(JEQ_Screen_86)
D=D-1
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
M=0
@IF_TRUE1
D;JNE
@IF_FALSE1
0;JMP
(IF_TRUE1)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 4
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 5
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D&M
@Screen.updateLocation_RETURN_188 // call Screen.updateLocation 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.updateLocation
0;JMP
(Screen.updateLocation_RETURN_188)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@IF_END1
0;JMP
(IF_FALSE1)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 5
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Screen.updateLocation_RETURN_189 // call Screen.updateLocation 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.updateLocation
0;JMP
(Screen.updateLocation_RETURN_189)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(WHILE_EXP0)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 3
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // lt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JLT_TRUE_Screen_87
D;JLT
D=0
@JLT_FALSE_Screen_87
0;JMP
(JLT_TRUE_Screen_87)
D=-1
(JLT_FALSE_Screen_87)
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@WHILE_END0
D;JNE
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=-M
@Screen.updateLocation_RETURN_190 // call Screen.updateLocation 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.updateLocation
0;JMP
(Screen.updateLocation_RETURN_190)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@WHILE_EXP0
0;JMP
(WHILE_END0)
@LCL // push local 3
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 4
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Screen.updateLocation_RETURN_191 // call Screen.updateLocation 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.updateLocation
0;JMP
(Screen.updateLocation_RETURN_191)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
(IF_END1)
(IF_FALSE0)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(Screen.drawSymetric)// initializa local variables
@0
D=A
@R13
M=D
(Screen.drawSymetric_INIT_LOCALS_LOOP)
@Screen.drawSymetric_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Screen.drawSymetric_INIT_LOCALS_LOOP
0;JMP
(Screen.drawSymetric_INIT_LOCALS_END)
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 3
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@Screen.drawHorizontal_RETURN_192 // call Screen.drawHorizontal 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawHorizontal
0;JMP
(Screen.drawHorizontal_RETURN_192)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 3
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@Screen.drawHorizontal_RETURN_193 // call Screen.drawHorizontal 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawHorizontal
0;JMP
(Screen.drawHorizontal_RETURN_193)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 3
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 3
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@Screen.drawHorizontal_RETURN_194 // call Screen.drawHorizontal 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawHorizontal
0;JMP
(Screen.drawHorizontal_RETURN_194)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 3
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 3
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@Screen.drawHorizontal_RETURN_195 // call Screen.drawHorizontal 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawHorizontal
0;JMP
(Screen.drawHorizontal_RETURN_195)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(Screen.drawCircle)// initializa local variables
@3
D=A
@R13
M=D
(Screen.drawCircle_INIT_LOCALS_LOOP)
@Screen.drawCircle_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Screen.drawCircle_INIT_LOCALS_LOOP
0;JMP
(Screen.drawCircle_INIT_LOCALS_END)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // lt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JLT_TRUE_Screen_88
D;JLT
D=0
@JLT_FALSE_Screen_88
0;JMP
(JLT_TRUE_Screen_88)
D=-1
(JLT_FALSE_Screen_88)
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@511 // push constant 511
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // gt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JGT_TRUE_Screen_89
D;JGT
D=0
@JGT_FALSE_Screen_89
0;JMP
(JGT_TRUE_Screen_89)
D=-1
(JGT_FALSE_Screen_89)
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D|M
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // lt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JLT_TRUE_Screen_90
D;JLT
D=0
@JLT_FALSE_Screen_90
0;JMP
(JLT_TRUE_Screen_90)
D=-1
(JLT_FALSE_Screen_90)
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D|M
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@255 // push constant 255
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // gt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JGT_TRUE_Screen_91
D;JGT
D=0
@JGT_FALSE_Screen_91
0;JMP
(JGT_TRUE_Screen_91)
D=-1
(JGT_FALSE_Screen_91)
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D|M
@SP
AM=M-1
D=M
M=0
@IF_TRUE0
D;JNE
@IF_FALSE0
0;JMP
(IF_TRUE0)
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@Sys.error_RETURN_196 // call Sys.error 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(Sys.error_RETURN_196)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
(IF_FALSE0)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // lt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JLT_TRUE_Screen_92
D;JLT
D=0
@JLT_FALSE_Screen_92
0;JMP
(JLT_TRUE_Screen_92)
D=-1
(JLT_FALSE_Screen_92)
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@511 // push constant 511
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // gt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JGT_TRUE_Screen_93
D;JGT
D=0
@JGT_FALSE_Screen_93
0;JMP
(JGT_TRUE_Screen_93)
D=-1
(JGT_FALSE_Screen_93)
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D|M
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // lt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JLT_TRUE_Screen_94
D;JLT
D=0
@JLT_FALSE_Screen_94
0;JMP
(JLT_TRUE_Screen_94)
D=-1
(JLT_FALSE_Screen_94)
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D|M
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@255 // push constant 255
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // gt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JGT_TRUE_Screen_95
D;JGT
D=0
@JGT_FALSE_Screen_95
0;JMP
(JGT_TRUE_Screen_95)
D=-1
(JGT_FALSE_Screen_95)
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D|M
@SP
AM=M-1
D=M
M=0
@IF_TRUE1
D;JNE
@IF_FALSE1
0;JMP
(IF_TRUE1)
@13 // push constant 13
D=A
@SP
A=M
M=D
@SP
M=M+1
@Sys.error_RETURN_197 // call Sys.error 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(Sys.error_RETURN_197)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
(IF_FALSE1)
@ARG // push argument 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@LCL // pop local 2
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Screen.drawSymetric_RETURN_198 // call Screen.drawSymetric 4
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawSymetric
0;JMP
(Screen.drawSymetric_RETURN_198)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
(WHILE_EXP0)
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // gt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JGT_TRUE_Screen_96
D;JGT
D=0
@JGT_FALSE_Screen_96
0;JMP
(JGT_TRUE_Screen_96)
D=-1
(JGT_FALSE_Screen_96)
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@WHILE_END0
D;JNE
@LCL // push local 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // lt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JLT_TRUE_Screen_97
D;JLT
D=0
@JLT_FALSE_Screen_97
0;JMP
(JLT_TRUE_Screen_97)
D=-1
(JLT_FALSE_Screen_97)
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
M=0
@IF_TRUE2
D;JNE
@IF_FALSE2
0;JMP
(IF_TRUE2)
@LCL // push local 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2 // push constant 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Math.multiply_RETURN_199 // call Math.multiply 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Math.multiply_RETURN_199)
@SP
AM=M-1
D=M
A=A-1
M=D+M
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 2
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@IF_END2
0;JMP
(IF_FALSE2)
@LCL // push local 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2 // push constant 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@Math.multiply_RETURN_200 // call Math.multiply 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Math.multiply_RETURN_200)
@SP
AM=M-1
D=M
A=A-1
M=D+M
@5 // push constant 5
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 2
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(IF_END2)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Screen.drawSymetric_RETURN_201 // call Screen.drawSymetric 4
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawSymetric
0;JMP
(Screen.drawSymetric_RETURN_201)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@WHILE_EXP0
0;JMP
(WHILE_END0)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(String.new)// initializa local variables
@0
D=A
@R13
M=D
(String.new_INIT_LOCALS_LOOP)
@String.new_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@String.new_INIT_LOCALS_LOOP
0;JMP
(String.new_INIT_LOCALS_END)
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@Memory.alloc_RETURN_202 // call Memory.alloc 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.alloc
0;JMP
(Memory.alloc_RETURN_202)
@SP // pop pointer 0
M=M-1
A=M
D=M
@R3
M=D
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // lt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JLT_TRUE_String_98
D;JLT
D=0
@JLT_FALSE_String_98
0;JMP
(JLT_TRUE_String_98)
D=-1
(JLT_FALSE_String_98)
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
M=0
@IF_TRUE0
D;JNE
@IF_FALSE0
0;JMP
(IF_TRUE0)
@14 // push constant 14
D=A
@SP
A=M
M=D
@SP
M=M+1
@Sys.error_RETURN_203 // call Sys.error 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(Sys.error_RETURN_203)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
(IF_FALSE0)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // gt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JGT_TRUE_String_99
D;JGT
D=0
@JGT_FALSE_String_99
0;JMP
(JGT_TRUE_String_99)
D=-1
(JGT_FALSE_String_99)
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
M=0
@IF_TRUE1
D;JNE
@IF_FALSE1
0;JMP
(IF_TRUE1)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Array.new_RETURN_204 // call Array.new 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.new
0;JMP
(Array.new_RETURN_204)
@THIS // pop this 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(IF_FALSE1)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // pop this 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS // pop this 2
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@R3 // push pointer 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(String.dispose)// initializa local variables
@0
D=A
@R13
M=D
(String.dispose_INIT_LOCALS_LOOP)
@String.dispose_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@String.dispose_INIT_LOCALS_LOOP
0;JMP
(String.dispose_INIT_LOCALS_END)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop pointer 0
M=M-1
A=M
D=M
@R3
M=D
@THIS // push this 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // gt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JGT_TRUE_String_100
D;JGT
D=0
@JGT_FALSE_String_100
0;JMP
(JGT_TRUE_String_100)
D=-1
(JGT_FALSE_String_100)
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
M=0
@IF_TRUE0
D;JNE
@IF_FALSE0
0;JMP
(IF_TRUE0)
@THIS // push this 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Array.dispose_RETURN_205 // call Array.dispose 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.dispose
0;JMP
(Array.dispose_RETURN_205)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
(IF_FALSE0)
@R3 // push pointer 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@Memory.deAlloc_RETURN_206 // call Memory.deAlloc 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.deAlloc
0;JMP
(Memory.deAlloc_RETURN_206)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(String.length)// initializa local variables
@0
D=A
@R13
M=D
(String.length_INIT_LOCALS_LOOP)
@String.length_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@String.length_INIT_LOCALS_LOOP
0;JMP
(String.length_INIT_LOCALS_END)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop pointer 0
M=M-1
A=M
D=M
@R3
M=D
@THIS // push this 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(String.charAt)// initializa local variables
@0
D=A
@R13
M=D
(String.charAt_INIT_LOCALS_LOOP)
@String.charAt_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@String.charAt_INIT_LOCALS_LOOP
0;JMP
(String.charAt_INIT_LOCALS_END)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop pointer 0
M=M-1
A=M
D=M
@R3
M=D
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // lt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JLT_TRUE_String_101
D;JLT
D=0
@JLT_FALSE_String_101
0;JMP
(JLT_TRUE_String_101)
D=-1
(JLT_FALSE_String_101)
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // gt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JGT_TRUE_String_102
D;JGT
D=0
@JGT_FALSE_String_102
0;JMP
(JGT_TRUE_String_102)
D=-1
(JGT_FALSE_String_102)
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D|M
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // eq
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JEQ_String_103
D;JEQ
D=1
(JEQ_String_103)
D=D-1
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D|M
@SP
AM=M-1
D=M
M=0
@IF_TRUE0
D;JNE
@IF_FALSE0
0;JMP
(IF_TRUE0)
@15 // push constant 15
D=A
@SP
A=M
M=D
@SP
M=M+1
@Sys.error_RETURN_207 // call Sys.error 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(Sys.error_RETURN_207)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
(IF_FALSE0)
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(String.setCharAt)// initializa local variables
@0
D=A
@R13
M=D
(String.setCharAt_INIT_LOCALS_LOOP)
@String.setCharAt_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@String.setCharAt_INIT_LOCALS_LOOP
0;JMP
(String.setCharAt_INIT_LOCALS_END)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop pointer 0
M=M-1
A=M
D=M
@R3
M=D
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // lt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JLT_TRUE_String_104
D;JLT
D=0
@JLT_FALSE_String_104
0;JMP
(JLT_TRUE_String_104)
D=-1
(JLT_FALSE_String_104)
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // gt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JGT_TRUE_String_105
D;JGT
D=0
@JGT_FALSE_String_105
0;JMP
(JGT_TRUE_String_105)
D=-1
(JGT_FALSE_String_105)
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D|M
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // eq
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JEQ_String_106
D;JEQ
D=1
(JEQ_String_106)
D=D-1
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D|M
@SP
AM=M-1
D=M
M=0
@IF_TRUE0
D;JNE
@IF_FALSE0
0;JMP
(IF_TRUE0)
@16 // push constant 16
D=A
@SP
A=M
M=D
@SP
M=M+1
@Sys.error_RETURN_208 // call Sys.error 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(Sys.error_RETURN_208)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
(IF_FALSE0)
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@ARG // push argument 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(String.appendChar)// initializa local variables
@0
D=A
@R13
M=D
(String.appendChar_INIT_LOCALS_LOOP)
@String.appendChar_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@String.appendChar_INIT_LOCALS_LOOP
0;JMP
(String.appendChar_INIT_LOCALS_END)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop pointer 0
M=M-1
A=M
D=M
@R3
M=D
@THIS // push this 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // eq
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JEQ_String_107
D;JEQ
D=1
(JEQ_String_107)
D=D-1
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
M=0
@IF_TRUE0
D;JNE
@IF_FALSE0
0;JMP
(IF_TRUE0)
@17 // push constant 17
D=A
@SP
A=M
M=D
@SP
M=M+1
@Sys.error_RETURN_209 // call Sys.error 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(Sys.error_RETURN_209)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
(IF_FALSE0)
@THIS // push this 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@THIS // push this 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@THIS // pop this 2
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@R3 // push pointer 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(String.eraseLastChar)// initializa local variables
@0
D=A
@R13
M=D
(String.eraseLastChar_INIT_LOCALS_LOOP)
@String.eraseLastChar_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@String.eraseLastChar_INIT_LOCALS_LOOP
0;JMP
(String.eraseLastChar_INIT_LOCALS_END)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop pointer 0
M=M-1
A=M
D=M
@R3
M=D
@THIS // push this 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // eq
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JEQ_String_108
D;JEQ
D=1
(JEQ_String_108)
D=D-1
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
M=0
@IF_TRUE0
D;JNE
@IF_FALSE0
0;JMP
(IF_TRUE0)
@18 // push constant 18
D=A
@SP
A=M
M=D
@SP
M=M+1
@Sys.error_RETURN_210 // call Sys.error 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(Sys.error_RETURN_210)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
(IF_FALSE0)
@THIS // push this 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@THIS // pop this 2
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(String.intValue)// initializa local variables
@5
D=A
@R13
M=D
(String.intValue_INIT_LOCALS_LOOP)
@String.intValue_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@String.intValue_INIT_LOCALS_LOOP
0;JMP
(String.intValue_INIT_LOCALS_END)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop pointer 0
M=M-1
A=M
D=M
@R3
M=D
@THIS // push this 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // eq
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JEQ_String_109
D;JEQ
D=1
(JEQ_String_109)
D=D-1
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
M=0
@IF_TRUE0
D;JNE
@IF_FALSE0
0;JMP
(IF_TRUE0)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(IF_FALSE0)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=!M
@LCL // pop local 3
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@45 // push constant 45
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // eq
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JEQ_String_110
D;JEQ
D=1
(JEQ_String_110)
D=D-1
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
M=0
@IF_TRUE1
D;JNE
@IF_FALSE1
0;JMP
(IF_TRUE1)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=!M
@LCL // pop local 4
D=M
@4
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(IF_FALSE1)
(WHILE_EXP0)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // lt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JLT_TRUE_String_111
D;JLT
D=0
@JLT_FALSE_String_111
0;JMP
(JLT_TRUE_String_111)
D=-1
(JLT_FALSE_String_111)
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 3
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D&M
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@WHILE_END0
D;JNE
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@LCL // pop local 2
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // lt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JLT_TRUE_String_112
D;JLT
D=0
@JLT_FALSE_String_112
0;JMP
(JLT_TRUE_String_112)
D=-1
(JLT_FALSE_String_112)
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@9 // push constant 9
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // gt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JGT_TRUE_String_113
D;JGT
D=0
@JGT_FALSE_String_113
0;JMP
(JGT_TRUE_String_113)
D=-1
(JGT_FALSE_String_113)
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D|M
@SP
A=M
A=A-1
M=!M
@LCL // pop local 3
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 3
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
M=0
@IF_TRUE2
D;JNE
@IF_FALSE2
0;JMP
(IF_TRUE2)
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@10 // push constant 10
D=A
@SP
A=M
M=D
@SP
M=M+1
@Math.multiply_RETURN_211 // call Math.multiply 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Math.multiply_RETURN_211)
@LCL // push local 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(IF_FALSE2)
@WHILE_EXP0
0;JMP
(WHILE_END0)
@LCL // push local 4
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
M=0
@IF_TRUE3
D;JNE
@IF_FALSE3
0;JMP
(IF_TRUE3)
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=-M
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(IF_FALSE3)
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(String.setInt)// initializa local variables
@4
D=A
@R13
M=D
(String.setInt_INIT_LOCALS_LOOP)
@String.setInt_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@String.setInt_INIT_LOCALS_LOOP
0;JMP
(String.setInt_INIT_LOCALS_END)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop pointer 0
M=M-1
A=M
D=M
@R3
M=D
@THIS // push this 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // eq
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JEQ_String_114
D;JEQ
D=1
(JEQ_String_114)
D=D-1
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
M=0
@IF_TRUE0
D;JNE
@IF_FALSE0
0;JMP
(IF_TRUE0)
@19 // push constant 19
D=A
@SP
A=M
M=D
@SP
M=M+1
@Sys.error_RETURN_212 // call Sys.error 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(Sys.error_RETURN_212)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
(IF_FALSE0)
@6 // push constant 6
D=A
@SP
A=M
M=D
@SP
M=M+1
@Array.new_RETURN_213 // call Array.new 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.new
0;JMP
(Array.new_RETURN_213)
@LCL // pop local 2
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // lt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JLT_TRUE_String_115
D;JLT
D=0
@JLT_FALSE_String_115
0;JMP
(JLT_TRUE_String_115)
D=-1
(JLT_FALSE_String_115)
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
M=0
@IF_TRUE1
D;JNE
@IF_FALSE1
0;JMP
(IF_TRUE1)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=!M
@LCL // pop local 3
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=-M
@ARG // pop argument 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(IF_FALSE1)
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(WHILE_EXP0)
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // gt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JGT_TRUE_String_116
D;JGT
D=0
@JGT_FALSE_String_116
0;JMP
(JGT_TRUE_String_116)
D=-1
(JGT_FALSE_String_116)
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@WHILE_END0
D;JNE
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@10 // push constant 10
D=A
@SP
A=M
M=D
@SP
M=M+1
@Math.divide_RETURN_214 // call Math.divide 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(Math.divide_RETURN_214)
@LCL // pop local 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@10 // push constant 10
D=A
@SP
A=M
M=D
@SP
M=M+1
@Math.multiply_RETURN_215 // call Math.multiply 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Math.multiply_RETURN_215)
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG // pop argument 1
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@WHILE_EXP0
0;JMP
(WHILE_END0)
@LCL // push local 3
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
M=0
@IF_TRUE2
D;JNE
@IF_FALSE2
0;JMP
(IF_TRUE2)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@45 // push constant 45
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(IF_FALSE2)
@THIS // push this 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // lt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JLT_TRUE_String_117
D;JLT
D=0
@JLT_FALSE_String_117
0;JMP
(JLT_TRUE_String_117)
D=-1
(JLT_FALSE_String_117)
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
M=0
@IF_TRUE3
D;JNE
@IF_FALSE3
0;JMP
(IF_TRUE3)
@19 // push constant 19
D=A
@SP
A=M
M=D
@SP
M=M+1
@Sys.error_RETURN_216 // call Sys.error 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(Sys.error_RETURN_216)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
(IF_FALSE3)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // eq
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JEQ_String_118
D;JEQ
D=1
(JEQ_String_118)
D=D-1
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
M=0
@IF_TRUE4
D;JNE
@IF_FALSE4
0;JMP
(IF_TRUE4)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@48 // push constant 48
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS // pop this 2
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@IF_END4
0;JMP
(IF_FALSE4)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS // pop this 2
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(WHILE_EXP1)
@THIS // push this 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // lt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JLT_TRUE_String_119
D;JLT
D=0
@JLT_FALSE_String_119
0;JMP
(JLT_TRUE_String_119)
D=-1
(JLT_FALSE_String_119)
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@WHILE_END1
D;JNE
@THIS // push this 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP
AM=M-1
D=M
A=A-1
M=M-D
@LCL // push local 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@THAT // push that 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@SP // pop pointer 1
M=M-1
A=M
D=M
@R4
M=D
@R5 // push temp 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT // pop that 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@THIS // push this 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@THIS // pop this 2
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@WHILE_EXP1
0;JMP
(WHILE_END1)
(IF_END4)
@LCL // push local 2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Array.dispose_RETURN_217 // call Array.dispose 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.dispose
0;JMP
(Array.dispose_RETURN_217)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(String.newLine)// initializa local variables
@0
D=A
@R13
M=D
(String.newLine_INIT_LOCALS_LOOP)
@String.newLine_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@String.newLine_INIT_LOCALS_LOOP
0;JMP
(String.newLine_INIT_LOCALS_END)
@128 // push constant 128
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(String.backSpace)// initializa local variables
@0
D=A
@R13
M=D
(String.backSpace_INIT_LOCALS_LOOP)
@String.backSpace_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@String.backSpace_INIT_LOCALS_LOOP
0;JMP
(String.backSpace_INIT_LOCALS_END)
@129 // push constant 129
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(String.doubleQuote)// initializa local variables
@0
D=A
@R13
M=D
(String.doubleQuote_INIT_LOCALS_LOOP)
@String.doubleQuote_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@String.doubleQuote_INIT_LOCALS_LOOP
0;JMP
(String.doubleQuote_INIT_LOCALS_END)
@34 // push constant 34
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(Sys.init)// initializa local variables
@0
D=A
@R13
M=D
(Sys.init_INIT_LOCALS_LOOP)
@Sys.init_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Sys.init_INIT_LOCALS_LOOP
0;JMP
(Sys.init_INIT_LOCALS_END)
@Memory.init_RETURN_218 // call Memory.init 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.init
0;JMP
(Memory.init_RETURN_218)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@Math.init_RETURN_219 // call Math.init 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.init
0;JMP
(Math.init_RETURN_219)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@Screen.init_RETURN_220 // call Screen.init 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.init
0;JMP
(Screen.init_RETURN_220)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@Output.init_RETURN_221 // call Output.init 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.init
0;JMP
(Output.init_RETURN_221)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@Keyboard.init_RETURN_222 // call Keyboard.init 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Keyboard.init
0;JMP
(Keyboard.init_RETURN_222)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@Main.main_RETURN_223 // call Main.main 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.main
0;JMP
(Main.main_RETURN_223)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@Sys.halt_RETURN_224 // call Sys.halt 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.halt
0;JMP
(Sys.halt_RETURN_224)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(Sys.halt)// initializa local variables
@0
D=A
@R13
M=D
(Sys.halt_INIT_LOCALS_LOOP)
@Sys.halt_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Sys.halt_INIT_LOCALS_LOOP
0;JMP
(Sys.halt_INIT_LOCALS_END)
(WHILE_EXP0)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=!M
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@WHILE_END0
D;JNE
@WHILE_EXP0
0;JMP
(WHILE_END0)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(Sys.wait)// initializa local variables
@1
D=A
@R13
M=D
(Sys.wait_INIT_LOCALS_LOOP)
@Sys.wait_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Sys.wait_INIT_LOCALS_LOOP
0;JMP
(Sys.wait_INIT_LOCALS_END)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // lt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JLT_TRUE_Sys_120
D;JLT
D=0
@JLT_FALSE_Sys_120
0;JMP
(JLT_TRUE_Sys_120)
D=-1
(JLT_FALSE_Sys_120)
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
M=0
@IF_TRUE0
D;JNE
@IF_FALSE0
0;JMP
(IF_TRUE0)
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@Sys.error_RETURN_225 // call Sys.error 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(Sys.error_RETURN_225)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
(IF_FALSE0)
(WHILE_EXP0)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // gt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JGT_TRUE_Sys_121
D;JGT
D=0
@JGT_FALSE_Sys_121
0;JMP
(JGT_TRUE_Sys_121)
D=-1
(JGT_FALSE_Sys_121)
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@WHILE_END0
D;JNE
@50 // push constant 50
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
(WHILE_EXP1)
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // gt
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@JGT_TRUE_Sys_122
D;JGT
D=0
@JGT_FALSE_Sys_122
0;JMP
(JGT_TRUE_Sys_122)
D=-1
(JGT_FALSE_Sys_122)
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
M=!M
@SP
AM=M-1
D=M
M=0
@WHILE_END1
D;JNE
@LCL // push local 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@LCL // pop local 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@WHILE_EXP1
0;JMP
(WHILE_END1)
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@ARG // pop argument 0
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
@WHILE_EXP0
0;JMP
(WHILE_END0)
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(Sys.error)// initializa local variables
@0
D=A
@R13
M=D
(Sys.error_INIT_LOCALS_LOOP)
@Sys.error_INIT_LOCALS_END
D;JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M-1
@Sys.error_INIT_LOCALS_LOOP
0;JMP
(Sys.error_INIT_LOCALS_END)
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@String.new_RETURN_226 // call String.new 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.new
0;JMP
(String.new_RETURN_226)
@69 // push constant 69
D=A
@SP
A=M
M=D
@SP
M=M+1
@String.appendChar_RETURN_227 // call String.appendChar 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(String.appendChar_RETURN_227)
@82 // push constant 82
D=A
@SP
A=M
M=D
@SP
M=M+1
@String.appendChar_RETURN_228 // call String.appendChar 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(String.appendChar_RETURN_228)
@82 // push constant 82
D=A
@SP
A=M
M=D
@SP
M=M+1
@String.appendChar_RETURN_229 // call String.appendChar 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(String.appendChar_RETURN_229)
@Output.printString_RETURN_230 // call Output.printString 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printString
0;JMP
(Output.printString_RETURN_230)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@ARG // push argument 0
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Output.printInt_RETURN_231 // call Output.printInt 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printInt
0;JMP
(Output.printInt_RETURN_231)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@Sys.halt_RETURN_232 // call Sys.halt 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.halt
0;JMP
(Sys.halt_RETURN_232)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
